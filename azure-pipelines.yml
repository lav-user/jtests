# Starter pipeline
# Pull from Repo
# Import Project into Docekr SOAtest CLI container and Run
# Azure YAML docs:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

# Set Up Project
steps:
- script: |
    echo "Starting Pipeline Execution."
    echo "Create ./temp directory for volume mount."
    mkdir temp
    echo ${PWD}
    echo "Copy SOAtest project contents to volume directory."
    cp -R $(soatest.project) temp/.
    cp -R $(soatest.project) /home/parasoft/.
    
    
    # Set Up and write .properties file
    echo  -e "\n~~~\nSetting up and creating soatestcli.properties file.\n"
    echo $"
    parasoft.eula.accepted=true
    dtp.url=$(localdtp)
    dtp.user=admin
    dtp.password=admin
    dtp.share.enabled=true
    dtp.project=ADO_1
    console.verbosity.level=high
    report.dtp.publish=true
    techsupport.create.on.exit=true
    techsupport.enabled=true
    techsupport.include.reports=true
    techsupport.include.sources=true
    techsupport.verbose.scontrol=false
    jtest.license.use_network=true
    jtest.license.network.edition=custom_edition
    jtest.license.custom_edition_features=Jtest, Static Analysis, Flow Analysis, OWASP Rules, CWE Rules, PCI DSS Rules, DISA STIG Rules, Security Rules, Automation, Desktop Command Line, DTP Publish, Coverage, Unit Test, Unit Test Bulk Creation, Unit Test Tier 1, Unit Test Tier 2, Unit Test Tier 3, Unit Test Tier 4, Unit Test Spring Framework, Change Based Testing" >> temp/jtestcli.properties
     echo -e "\nDebug -- Verify workspace contents.\n"
    ls -R
    echo -e "\nDebug -- Verify jtestcli.properties file contents."
    cat temp/jtestcli.properties

    docker --version

    docker run -i \
    -e ACCEPT_EULA=true \
    -v "$PWD/temp:$PWD" \
    -w "$PWD" \
    lavanya93/jtestmaven:firsttry /bin/bash -c " \
    cd demo ; \
    "mvn clean install jtest:jtest" \
    -Djtest.settings='/home/parasoft/jtestcli.properties' \
    -s /home/parasoft/.m2/settings.xml \
    docker ps \
    echo -e "\nDebug -- Verify ./temp contents\n"
    ls -R $PWD/temp
  displayName: Run Tests
  env:
    pwd: $(Build.Repository.LocalPath)
  
- publish: /home/vsts/work/1/s/temp
  artifact: TSA
# Publish Test Results

