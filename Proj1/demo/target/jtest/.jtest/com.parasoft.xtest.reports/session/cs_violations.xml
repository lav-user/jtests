<?xml version='1.0' encoding='UTF-8'?>
<mergePnt id="csViolations">
  <StdViols>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7a9ecef1-e4d4-3bd4-aa89-5fa5f6cd059b" locEndPos="59" prio="Not Defined" locEndLn="14" goals="0," locStartln="14" sev="3" locRef="2" tool="jtest" lineHash="1266022184" unbViolId="4c33a627-bf3d-3cc8-ba9a-6980e05a1946" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="lavanya" rule="CWE.200.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cee529c8-fe44-3647-8609-800a2f98861a" locEndPos="30" prio="Not Defined" locEndLn="14" goals="0," locStartln="14" sev="1" locRef="2" tool="jtest" lineHash="1266022184" unbViolId="bf1a3a00-afd9-3fa1-bf91-e51f40e2ed28" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="64558e54-3379-3039-b7cf-5fefb83504a8" locEndPos="59" prio="Not Defined" locEndLn="26" goals="0," locStartln="26" sev="3" locRef="2" tool="jtest" lineHash="1266022184" unbViolId="9994d07e-6b9b-3bb5-b769-1afb9b16663e" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="lavanya" rule="CWE.200.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1b9fcc75-4505-35fc-8f1c-1fcbb35410ed" locEndPos="30" prio="Not Defined" locEndLn="26" goals="0," locStartln="26" sev="1" locRef="2" tool="jtest" lineHash="1266022184" unbViolId="3f8df4ca-a9bc-345a-b7b6-03bd2d4dde37" risk="Undefined" locType="sr" hash="-32679949" />
    <FlowViol msg="&quot;context&quot; may possibly be null" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="lavanya" FirstElSrcRngEndLn="19" rule="CWE.476.NP" FirstElSrcRngStartPos="8" lnHash="-1273380230" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="19" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-850556638" lang="java" violId="03062da1-a55e-3f3f-a527-64e2b56489a8" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="29" goals="1," locStartln="29" sev="1" locRef="2" tool="jtest" lineHash="-1273380230" unbViolId="c296113f-d604-3f9c-af9f-9830ed0572de" risk="Undefined" locType="sr" hash="-32679949" causeLocRef="2">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1434008792" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ln="19" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="19" srcRngEndLn="19" desc="GSSContext context = null;" ElType=".C" rngLn="19">
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: context" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1900478135" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ln="21" srcRngStartPos="12" srcRngEndPos="68" srcRngStartln="21" srcRngEndLn="21" desc="context = GSSManager.getInstance().createContext(tokens)" ElType="!E" rngLn="21" thrownTypes="GSSException" throwingMethod="GSSManager.createContext">
          <Anns>
            <Ann msg="GSSManager.createContext() throws GSSException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ln="25" srcRngStartPos="10" srcRngEndPos="32" srcRngStartln="25" srcRngEndLn="25" desc="catch (Exception ioe)" ElType="." rngLn="25" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ln="26" srcRngStartPos="12" srcRngEndPos="60" srcRngStartln="26" srcRngEndLn="26" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="26" />
        <ElDesc lineHash="-1273380230" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ln="29" srcRngStartPos="16" srcRngEndPos="34" srcRngStartln="29" srcRngEndLn="29" desc="context.dispose();" ElType=".P" rngLn="29">
          <Anns>
            <Ann msg="Null value carrier: context" kind="comment" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="lavanya" rule="CWE.200.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eb80a8e2-45c3-3f0c-b5c5-035eafa6f3ae" locEndPos="57" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="3" locRef="3" tool="jtest" lineHash="957734862" unbViolId="4821c58a-4b2d-3dc3-b82d-7b76b17f0d7d" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="lavanya" rule="CWE.200.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6fca8137-7851-39a9-bf0d-1b1d79c1b01c" locEndPos="30" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="1" locRef="3" tool="jtest" lineHash="957734862" unbViolId="3cf9d566-eafe-3d41-b2d5-d780c372bb23" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="lavanya" rule="CWE.200.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="077087b3-cca1-34f9-94e5-951ba3f2027f" locEndPos="57" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="3" tool="jtest" lineHash="957734862" unbViolId="47189fe9-13e6-3a49-aced-84bc1f7ada61" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="lavanya" rule="CWE.200.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="33153522-eabc-33e1-b9ca-79565e6186c4" locEndPos="30" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="1" locRef="3" tool="jtest" lineHash="957734862" unbViolId="6692cafd-ff5f-33c2-b160-a8bcc300c565" risk="Undefined" locType="sr" hash="1088242968" />
    <FlowViol msg="&quot;imgReader&quot; may possibly be null" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="lavanya" FirstElSrcRngEndLn="24" rule="CWE.476.NP" FirstElSrcRngStartPos="8" lnHash="-281777821" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="24" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1258022354" lang="java" violId="94e7e512-439f-31b8-b738-54607fde6cd3" locEndPos="32" prio="Not Defined" locEndLn="31" goals="0," locStartln="31" sev="1" locRef="3" tool="jtest" lineHash="-281777821" unbViolId="182a259e-1d9f-34c0-9f9b-b604a6adef8f" risk="Undefined" locType="sr" hash="1088242968" causeLocRef="3">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-2075299321" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="23" srcRngStartPos="8" srcRngEndPos="27" srcRngStartln="23" srcRngEndLn="23" desc="Image image = null;" ElType="." rngLn="23" />
        <ElDesc lineHash="1423331445" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="24" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="24" srcRngEndLn="24" desc="ImageReader imgReader = null;" ElType=".C" rngLn="24">
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: imgReader" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="379037799" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="26" srcRngStartPos="12" srcRngEndPos="50" srcRngStartln="26" srcRngEndLn="26" desc="imgReader = spi.createReaderInstance()" ElType="!E" rngLn="26" thrownTypes="IOException" throwingMethod="ImageReaderSpi.createReaderInstance">
          <Anns>
            <Ann msg="ImageReaderSpi.createReaderInstance() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="28" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="28" srcRngEndLn="28" desc="catch (Exception e)" ElType="." rngLn="28" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="29" srcRngStartPos="12" srcRngEndPos="58" srcRngStartln="29" srcRngEndLn="29" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="29" />
        <ElDesc lineHash="-281777821" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="31" srcRngStartPos="12" srcRngEndPos="32" srcRngStartln="31" srcRngEndLn="31" desc="imgReader.dispose();" ElType=".P" rngLn="31">
          <Anns>
            <Ann msg="Null value carrier: imgReader" kind="comment" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;FileInputStream&quot; is dangerous and should be validated" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="66" auth="lavanya" FirstElSrcRngEndLn="13" rule="CWE.352.EACM" FirstElSrcRngStartPos="37" lnHash="-408098528" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="13" locStartPos="37" analyzer="com.parasoft.jtest.flowanalyzer" id="-1038045899" lang="java" violId="7e375a9b-ffdf-3d66-9c58-1c5b83a13328" locEndPos="66" urgent="true" prio="Not Defined" locEndLn="13" goals="1," locStartln="13" sev="2" locRef="5" tool="jtest" lineHash="-408098528" unbViolId="43de9870-5039-388c-8a86-dedde27c00a2" risk="Undefined" locType="sr" hash="1710944294" causeLocRef="5">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-408098528" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="13" srcRngStartPos="37" srcRngEndPos="66" srcRngStartln="13" srcRngEndLn="13" desc="new FileInputStream(filename)" ElType="CP" rngLn="13">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;FileInputStream&quot; is dangerous and should be validated" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="66" auth="lavanya" FirstElSrcRngEndLn="13" rule="CWE.79.EACM" FirstElSrcRngStartPos="37" lnHash="-408098528" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="13" locStartPos="37" analyzer="com.parasoft.jtest.flowanalyzer" id="-1946903071" lang="java" violId="847d1c86-c0c5-322a-b706-f2e22c0040ec" locEndPos="66" urgent="true" prio="Not Defined" locEndLn="13" goals="1," locStartln="13" sev="2" locRef="5" tool="jtest" lineHash="-408098528" unbViolId="48caf663-9cc9-3e5d-81d3-fa294f60ec63" risk="Undefined" locType="sr" hash="1710944294" causeLocRef="5">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-408098528" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="13" srcRngStartPos="37" srcRngEndPos="66" srcRngStartln="13" srcRngEndLn="13" desc="new FileInputStream(filename)" ElType="CP" rngLn="13">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1ec98dca-cf22-3850-aa54-8797302043bc" locEndPos="59" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="5" tool="jtest" lineHash="1266022184" unbViolId="8d426b71-a09b-3c55-9942-01cd7188e75e" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="lavanya" rule="CWE.200.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f9591101-71ec-371e-ba49-43a1626df8f4" locEndPos="30" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="1" locRef="5" tool="jtest" lineHash="1266022184" unbViolId="1ef01f27-7bfc-3a83-a61c-1a19b9b48cf8" risk="Undefined" locType="sr" hash="1710944294" />
    <FlowViol msg="The argument of the constructor for &quot;FileInputStream&quot; is dangerous and should be validated" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="66" auth="lavanya" FirstElSrcRngEndLn="26" rule="CWE.352.EACM" FirstElSrcRngStartPos="37" lnHash="-408098528" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="26" locStartPos="37" analyzer="com.parasoft.jtest.flowanalyzer" id="-1038045899" lang="java" violId="b47e2544-8ce8-3d74-b0d4-8d55cbf3c674" locEndPos="66" urgent="true" prio="Not Defined" locEndLn="26" goals="1," locStartln="26" sev="2" locRef="5" tool="jtest" lineHash="-408098528" unbViolId="fc53f080-c0fb-3415-bf79-9e971f34cd72" risk="Undefined" locType="sr" hash="1710944294" causeLocRef="5">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-408098528" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="26" srcRngStartPos="37" srcRngEndPos="66" srcRngStartln="26" srcRngEndLn="26" desc="new FileInputStream(filename)" ElType="CP" rngLn="26">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;FileInputStream&quot; is dangerous and should be validated" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="66" auth="lavanya" FirstElSrcRngEndLn="26" rule="CWE.79.EACM" FirstElSrcRngStartPos="37" lnHash="-408098528" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="26" locStartPos="37" analyzer="com.parasoft.jtest.flowanalyzer" id="-1946903071" lang="java" violId="5291ab8b-8baf-3f14-81b6-b541ce0c0e6d" locEndPos="66" urgent="true" prio="Not Defined" locEndLn="26" goals="1," locStartln="26" sev="2" locRef="5" tool="jtest" lineHash="-408098528" unbViolId="fb83d12f-7a5f-3f63-8f66-590209a5664a" risk="Undefined" locType="sr" hash="1710944294" causeLocRef="5">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-408098528" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="26" srcRngStartPos="37" srcRngEndPos="66" srcRngStartln="26" srcRngEndLn="26" desc="new FileInputStream(filename)" ElType="CP" rngLn="26">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ef24f02a-7238-348c-8977-fbd54ed5ec18" locEndPos="59" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="3" locRef="5" tool="jtest" lineHash="1266022184" unbViolId="d0708e3e-a228-367b-a0d1-24313b62fe67" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="lavanya" rule="CWE.200.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="02296aa2-ecee-3432-8332-e5a863e64596" locEndPos="30" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="1" locRef="5" tool="jtest" lineHash="1266022184" unbViolId="755dde7f-997b-3bed-a6ad-45b3543eb2c1" risk="Undefined" locType="sr" hash="1710944294" />
    <FlowViol msg="&quot;channel&quot; may possibly be null" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="35" auth="lavanya" FirstElSrcRngEndLn="24" rule="CWE.476.NP" FirstElSrcRngStartPos="8" lnHash="843047661" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="24" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-1746100919" lang="java" violId="d9958ddf-3c2d-3aff-ab78-330b37336209" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="35" goals="1," locStartln="35" sev="1" locRef="5" tool="jtest" lineHash="843047661" unbViolId="b1cfe329-fac3-3615-8822-3f1fb5019fb0" risk="Undefined" locType="sr" hash="1710944294" causeLocRef="5">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1200399739" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="24" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="24" srcRngEndLn="24" desc="FileChannel channel = null;" ElType=".C" rngLn="24">
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: channel" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-408098528" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="26" srcRngStartPos="37" srcRngEndPos="66" srcRngStartln="26" srcRngEndLn="26" desc="new FileInputStream(filename)" ElType="!E" rngLn="26" thrownTypes="FileNotFoundException" throwingMethod="FileInputStream.FileInputStream">
          <Anns>
            <Ann msg="FileInputStream.FileInputStream() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="31" srcRngStartPos="10" srcRngEndPos="32" srcRngStartln="31" srcRngEndLn="31" desc="catch (Exception ioe)" ElType="." rngLn="31" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="32" srcRngStartPos="12" srcRngEndPos="60" srcRngStartln="32" srcRngEndLn="32" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="32" />
        <ElDesc lineHash="843047661" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="35" srcRngStartPos="16" srcRngEndPos="32" srcRngStartln="35" srcRngEndLn="35" desc="channel.close();" ElType=".P" rngLn="35">
          <Anns>
            <Ann msg="Null value carrier: channel" kind="comment" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;RandomAccessFile&quot; is dangerous and should be validated" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="73" auth="lavanya" FirstElSrcRngEndLn="10" rule="CWE.352.EACM" FirstElSrcRngStartPos="35" lnHash="-1850530378" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="10" locStartPos="35" analyzer="com.parasoft.jtest.flowanalyzer" id="-538226454" lang="java" violId="d31cca84-2d80-3f96-b2ca-5e6f111bea5e" locEndPos="73" urgent="true" prio="Not Defined" locEndLn="10" goals="1," locStartln="10" sev="2" locRef="6" tool="jtest" lineHash="-1850530378" unbViolId="209a7214-df1a-373d-b803-f0a4b63c4ac7" risk="Undefined" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1850530378" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="10" srcRngStartPos="35" srcRngEndPos="73" srcRngStartln="10" srcRngEndLn="10" desc="new RandomAccessFile(sFileName, sMode)" ElType="CP" rngLn="10">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;RandomAccessFile&quot; is dangerous and should be validated" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="73" auth="lavanya" FirstElSrcRngEndLn="10" rule="CWE.79.EACM" FirstElSrcRngStartPos="35" lnHash="-1850530378" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="10" locStartPos="35" analyzer="com.parasoft.jtest.flowanalyzer" id="-1774231490" lang="java" violId="aa7d11df-9a3d-3ce8-bca8-e60a36558bc6" locEndPos="73" urgent="true" prio="Not Defined" locEndLn="10" goals="1," locStartln="10" sev="2" locRef="6" tool="jtest" lineHash="-1850530378" unbViolId="27f99d20-6e63-353a-b60d-591413f3ada5" risk="Undefined" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1850530378" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="10" srcRngStartPos="35" srcRngEndPos="73" srcRngStartln="10" srcRngEndLn="10" desc="new RandomAccessFile(sFileName, sMode)" ElType="CP" rngLn="10">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="lavanya" rule="CWE.200.SIO" lnHash="2082685994" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="83a08aaa-2226-3214-a463-da14900af30f" locEndPos="32" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="6" tool="jtest" lineHash="2082685994" unbViolId="c4b8f2c6-f274-38ce-b200-baba3eaa7df8" risk="Undefined" locType="sr" hash="-1842798386" />
    <FlowViol msg="The argument of the constructor for &quot;RandomAccessFile&quot; is dangerous and should be validated" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="56" auth="lavanya" FirstElSrcRngEndLn="24" rule="CWE.352.EACM" FirstElSrcRngStartPos="18" lnHash="1370866899" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="24" locStartPos="18" analyzer="com.parasoft.jtest.flowanalyzer" id="-538226454" lang="java" violId="a893c495-4ea1-3f08-8773-b0ca5c9ac03f" locEndPos="56" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="2" locRef="6" tool="jtest" lineHash="1370866899" unbViolId="3cbaeb61-a3c6-37fb-b98a-34b9233555c2" risk="Undefined" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1370866899" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="24" srcRngStartPos="18" srcRngEndPos="56" srcRngStartln="24" srcRngEndLn="24" desc="new RandomAccessFile(sFileName, sMode)" ElType="CP" rngLn="24">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;RandomAccessFile&quot; is dangerous and should be validated" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="56" auth="lavanya" FirstElSrcRngEndLn="24" rule="CWE.79.EACM" FirstElSrcRngStartPos="18" lnHash="1370866899" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="24" locStartPos="18" analyzer="com.parasoft.jtest.flowanalyzer" id="-1774231490" lang="java" violId="2ab503a1-0e6d-3ea0-90fe-920321de5bae" locEndPos="56" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="2" locRef="6" tool="jtest" lineHash="1370866899" unbViolId="0640c8e7-ffb4-3e6d-8402-c2428b0ae934" risk="Undefined" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1370866899" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="24" srcRngStartPos="18" srcRngEndPos="56" srcRngStartln="24" srcRngEndLn="24" desc="new RandomAccessFile(sFileName, sMode)" ElType="CP" rngLn="24">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="lavanya" rule="CWE.200.SIO" lnHash="2082685994" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="25e0d8ef-cc9b-340a-86b6-10d9d0b3c7e0" locEndPos="32" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="6" tool="jtest" lineHash="2082685994" unbViolId="d3ca02bd-72ca-3c58-9e08-f99483b5519b" risk="Undefined" locType="sr" hash="-1842798386" />
    <FlowViol msg="&quot;raf&quot; may possibly be null" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="36" auth="lavanya" FirstElSrcRngEndLn="22" rule="CWE.476.NP" FirstElSrcRngStartPos="8" lnHash="216587865" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="22" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-1234129573" lang="java" violId="5f14bec4-85fe-3afd-bb59-804be37cfef7" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="32" goals="1," locStartln="32" sev="1" locRef="6" tool="jtest" lineHash="216587865" unbViolId="41ecf415-e698-34d9-9330-5edadfbfa31b" risk="Undefined" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1121458434" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="21" srcRngStartPos="8" srcRngEndPos="26" srcRngStartln="21" srcRngEndLn="21" desc="String res = null;" ElType="." rngLn="21" />
        <ElDesc lineHash="-1186737013" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="22" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="22" srcRngEndLn="22" desc="RandomAccessFile raf = null;" ElType=".C" rngLn="22">
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: raf" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1370866899" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="24" srcRngStartPos="18" srcRngEndPos="56" srcRngStartln="24" srcRngEndLn="24" desc="new RandomAccessFile(sFileName, sMode)" ElType="!E" rngLn="24" thrownTypes="FileNotFoundException" throwingMethod="RandomAccessFile.RandomAccessFile">
          <Anns>
            <Ann msg="RandomAccessFile.RandomAccessFile() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="28" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="28" srcRngEndLn="28" desc="catch (Exception e)" ElType="." rngLn="28" />
        <ElDesc lineHash="2082685994" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="29" srcRngStartPos="12" srcRngEndPos="33" srcRngStartln="29" srcRngEndLn="29" desc="System.out.println();" ElType="." rngLn="29" />
        <ElDesc lineHash="216587865" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="32" srcRngStartPos="16" srcRngEndPos="28" srcRngStartln="32" srcRngEndLn="32" desc="raf.close();" ElType=".P" rngLn="32">
          <Anns>
            <Ann msg="Null value carrier: raf" kind="comment" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Consider using the SSL-enabled type 'SSLSocket' for the variable 'sock'" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="lavanya" rule="CWE.287.USC" lnHash="-657680996" pkg="examples.flowanalysis" rule.header="Use the SSL-enabled version of classes when possible" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="38a3ee22-3ffd-322c-906c-56807cc82464" locEndPos="23" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="7" tool="jtest" lineHash="-657680996" unbViolId="1ebd1151-a104-3f96-8c35-57e30bfa7e6f" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Consider using the SSL-enabled type 'SSLSocket' for the variable 'sock'" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="lavanya" rule="CWE.522.USC" lnHash="-657680996" pkg="examples.flowanalysis" rule.header="Use the SSL-enabled version of classes when possible" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d09ebfd5-85fc-3af1-b511-2581f98bfb40" locEndPos="23" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="7" tool="jtest" lineHash="-657680996" unbViolId="9713b7a7-7143-36ad-9073-a5da2253bddf" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="872f9fb2-8160-3727-8f40-b0efaf348de9" locEndPos="59" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="7" tool="jtest" lineHash="1266022184" unbViolId="760aaaba-7db6-3386-829f-37b2484a25b1" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="lavanya" rule="CWE.200.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0a45e915-6364-369a-a5d8-8a5f698d9b42" locEndPos="30" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="1" locRef="7" tool="jtest" lineHash="1266022184" unbViolId="82fc09b1-ba69-3a2c-a0b2-98e43f5b5709" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Consider using the SSL-enabled type 'SSLSocket' for the variable 'sock'" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="lavanya" rule="CWE.287.USC" lnHash="1379796226" pkg="examples.flowanalysis" rule.header="Use the SSL-enabled version of classes when possible" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e8c6836e-3699-32fc-9259-61db47e0910b" locEndPos="19" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="7" tool="jtest" lineHash="1379796226" unbViolId="f4d7666b-2866-3e86-a59b-a5446f83e79d" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Consider using the SSL-enabled type 'SSLSocket' for the variable 'sock'" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="lavanya" rule="CWE.522.USC" lnHash="1379796226" pkg="examples.flowanalysis" rule.header="Use the SSL-enabled version of classes when possible" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="de835e8c-96dc-3f62-87f0-a5b1aa6952ef" locEndPos="19" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="7" tool="jtest" lineHash="1379796226" unbViolId="ffb0b473-3a12-312e-9cee-164e1e18b3d4" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="624c085b-2550-3877-bf7e-15b2daa32d94" locEndPos="59" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="7" tool="jtest" lineHash="1266022184" unbViolId="fd9c00a7-9a38-3da9-a01b-04024c45540e" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="lavanya" rule="CWE.200.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8b83e500-3ce5-3112-b0fa-18fd34406b11" locEndPos="30" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="1" locRef="7" tool="jtest" lineHash="1266022184" unbViolId="fb4bd910-675c-36e2-8698-c54ef464b8b3" risk="Undefined" locType="sr" hash="-69784133" />
    <FlowViol msg="&quot;sock&quot; may possibly be null" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="27" auth="lavanya" FirstElSrcRngEndLn="20" rule="CWE.476.NP" FirstElSrcRngStartPos="8" lnHash="1669608780" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="20" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="1261324288" lang="java" violId="054f76e9-7442-3a00-b73b-149796080880" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="28" goals="1," locStartln="28" sev="1" locRef="7" tool="jtest" lineHash="1669608780" unbViolId="d9d74809-0018-31fb-92c8-efdbc13151f4" risk="Undefined" locType="sr" hash="-69784133" causeLocRef="7">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1379796226" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ln="20" srcRngStartPos="8" srcRngEndPos="27" srcRngStartln="20" srcRngEndLn="20" desc="Socket sock = null;" ElType=".C" rngLn="20">
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: sock" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="250633455" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ln="22" srcRngStartPos="12" srcRngEndPos="37" srcRngStartln="22" srcRngEndLn="22" desc="sock = srvSocket.accept()" ElType="!E" rngLn="22" thrownTypes="IOException" throwingMethod="ServerSocket.accept">
          <Anns>
            <Ann msg="ServerSocket.accept() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2094668668" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ln="24" srcRngStartPos="10" srcRngEndPos="34" srcRngStartln="24" srcRngEndLn="24" desc="catch (IOException ioe)" ElType="." rngLn="24" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ln="25" srcRngStartPos="12" srcRngEndPos="60" srcRngStartln="25" srcRngEndLn="25" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="25" />
        <ElDesc lineHash="1669608780" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ln="28" srcRngStartPos="16" srcRngEndPos="29" srcRngStartln="28" srcRngEndLn="28" desc="sock.close();" ElType=".P" rngLn="28">
          <Anns>
            <Ann msg="Null value carrier: sock" kind="comment" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.200.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6b0871e3-26b9-392c-9c03-cda02f87d735" locEndPos="57" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="8" tool="jtest" lineHash="957734862" unbViolId="50e00566-bb68-3831-86bd-0027e6af81d5" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.200.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4248e645-11d6-3576-8f4d-c7fb4068efde" locEndPos="30" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="1" locRef="8" tool="jtest" lineHash="957734862" unbViolId="9fd8e6f5-796f-356e-9a79-4881739ed656" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="The XMLDecoder class is used" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.502.AUXD" lnHash="2124518798" pkg="examples.flowanalysis" rule.header="Avoid parsing untrusted data with XMLDecoder" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b5cf5d11-0a0a-3bea-84c9-1285913a11e4" locEndPos="45" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="2" locRef="8" tool="jtest" lineHash="2124518798" unbViolId="75f64711-78e9-3f3b-a70a-383afe14d955" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="The XMLDecoder class is used" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.502.AUXD" lnHash="931043023" pkg="examples.flowanalysis" rule.header="Avoid parsing untrusted data with XMLDecoder" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1afb5e1a-676c-3e69-a1d6-c90a987ec0cb" locEndPos="42" prio="Not Defined" locEndLn="31" goals="0," locStartln="31" sev="2" locRef="8" tool="jtest" lineHash="931043023" unbViolId="e14e0ad6-e6f3-3ae6-b92a-e5dfa8fbc739" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.200.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e2f2f1e7-15a1-3784-acbd-1df6e7ebe35a" locEndPos="57" prio="Not Defined" locEndLn="37" goals="0," locStartln="37" sev="3" locRef="8" tool="jtest" lineHash="957734862" unbViolId="4ea36305-9506-35f8-956f-82ce6ed73ed5" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.200.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9472a71b-be47-36f6-91b9-66257aab4312" locEndPos="30" prio="Not Defined" locEndLn="37" goals="0," locStartln="37" sev="1" locRef="8" tool="jtest" lineHash="957734862" unbViolId="c731b1db-92f0-39f8-9a06-8a1483478362" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="50" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.200.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cd5c48d0-fb69-3da7-bdfe-86503a52133a" locEndPos="57" prio="Not Defined" locEndLn="50" goals="0," locStartln="50" sev="3" locRef="8" tool="jtest" lineHash="957734862" unbViolId="7428d4c4-3ca8-3266-a7a2-9160efe12113" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="50" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.200.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4962a40a-89e5-3c1b-8bc8-c88509fdfb5e" locEndPos="30" prio="Not Defined" locEndLn="50" goals="0," locStartln="50" sev="1" locRef="8" tool="jtest" lineHash="957734862" unbViolId="13bbaf2b-3864-3b21-8d4b-841e0a34a62a" risk="Undefined" locType="sr" hash="-1630627415" />
    <FlowViol msg="&quot;encoder&quot; may possibly be null" ln="52" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="lavanya" FirstElSrcRngEndLn="43" rule="CWE.476.NP" FirstElSrcRngStartPos="8" lnHash="1289477876" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="43" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-812809556" lang="java" violId="494f384c-a951-3bea-89f2-2f2ec4287e73" locEndPos="28" prio="Not Defined" locEndLn="52" goals="0," locStartln="52" sev="1" locRef="8" tool="jtest" lineHash="1289477876" unbViolId="36e25418-005e-35d8-8e77-9b9bed606a72" risk="Undefined" locType="sr" hash="-1630627415" causeLocRef="8">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1358363122" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="43" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="43" srcRngEndLn="43" desc="XMLEncoder encoder = null;" ElType=".C" rngLn="43">
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: encoder" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="529589572" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="45" srcRngStartPos="22" srcRngEndPos="41" srcRngStartln="45" srcRngEndLn="45" desc="new XMLEncoder(out)" ElType="!E" rngLn="45" thrownTypes="IllegalArgumentException" throwingMethod="XMLEncoder.XMLEncoder">
          <Anns>
            <Ann msg="XMLEncoder.XMLEncoder() throws IllegalArgumentException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="49" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="49" srcRngEndLn="49" desc="catch (Exception e)" ElType="." rngLn="49" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="50" srcRngStartPos="12" srcRngEndPos="58" srcRngStartln="50" srcRngEndLn="50" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="50" />
        <ElDesc lineHash="1289477876" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="52" srcRngStartPos="12" srcRngEndPos="28" srcRngStartln="52" srcRngEndLn="52" desc="encoder.close();" ElType=".P" rngLn="52">
          <Anns>
            <Ann msg="Null value carrier: encoder" kind="comment" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="The XMLDecoder class is used" ln="61" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.502.AUXD" lnHash="2124518798" pkg="examples.flowanalysis" rule.header="Avoid parsing untrusted data with XMLDecoder" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6d154e83-69f4-3707-b7aa-fd1a22984451" locEndPos="45" prio="Not Defined" locEndLn="61" goals="0," locStartln="61" sev="2" locRef="8" tool="jtest" lineHash="2124518798" unbViolId="0a4d3a1c-e166-30d4-b3e1-07d836fedd51" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="The XMLDecoder class is used" ln="64" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.502.AUXD" lnHash="931043023" pkg="examples.flowanalysis" rule.header="Avoid parsing untrusted data with XMLDecoder" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dbd429a5-57e3-3d30-b2fc-2e05f28ebfb2" locEndPos="42" prio="Not Defined" locEndLn="64" goals="0," locStartln="64" sev="2" locRef="8" tool="jtest" lineHash="931043023" unbViolId="4988098c-7a8c-35da-b42a-9d5df770f20c" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="69" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.200.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dbd6f3bc-33b3-3bec-9e66-2f52b8372af6" locEndPos="57" prio="Not Defined" locEndLn="69" goals="0," locStartln="69" sev="3" locRef="8" tool="jtest" lineHash="957734862" unbViolId="7378e852-dd33-3353-8c29-045771d36dfc" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="69" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="lavanya" rule="CWE.200.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="496a5f00-f45c-3b27-9dde-b8fb571cb7a6" locEndPos="30" prio="Not Defined" locEndLn="69" goals="0," locStartln="69" sev="1" locRef="8" tool="jtest" lineHash="957734862" unbViolId="9247cb18-dd83-398c-bbaf-9518efdc0039" risk="Undefined" locType="sr" hash="-1630627415" />
    <FlowViol msg="&quot;decoder&quot; may possibly be null" ln="71" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="lavanya" FirstElSrcRngEndLn="58" rule="CWE.476.NP" FirstElSrcRngStartPos="8" lnHash="1116947660" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="58" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-664007861" lang="java" violId="ec80c89b-c149-3c3e-a4db-ff7f621e4309" locEndPos="28" prio="Not Defined" locEndLn="71" goals="0," locStartln="71" sev="1" locRef="8" tool="jtest" lineHash="1116947660" unbViolId="a963a84d-b2db-3053-b15a-bdc95b36ed69" risk="Undefined" locType="sr" hash="-1630627415" causeLocRef="8">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1310850359" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="57" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="57" srcRngEndLn="57" desc="Vector vObjs = new Vector();" ElType="." rngLn="57" />
        <ElDesc lineHash="23744578" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="58" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="58" srcRngEndLn="58" desc="XMLDecoder decoder = null;" ElType=".C" rngLn="58">
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: decoder" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1321082029" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="60" srcRngStartPos="22" srcRngEndPos="40" srcRngStartln="60" srcRngEndLn="60" desc="new XMLDecoder(in)" ElType="!E" rngLn="60" thrownTypes="IllegalArgumentException" throwingMethod="XMLDecoder.XMLDecoder">
          <Anns>
            <Ann msg="XMLDecoder.XMLDecoder() throws IllegalArgumentException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="68" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="68" srcRngEndLn="68" desc="catch (Exception e)" ElType="." rngLn="68" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="69" srcRngStartPos="12" srcRngEndPos="58" srcRngStartln="69" srcRngEndLn="69" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="69" />
        <ElDesc lineHash="1116947660" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="71" srcRngStartPos="12" srcRngEndPos="28" srcRngStartln="71" srcRngEndLn="71" desc="decoder.close();" ElType=".P" rngLn="71">
          <Anns>
            <Ann msg="Null value carrier: decoder" kind="comment" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;FileReader&quot; is dangerous and should be validated" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="65" auth="lavanya" FirstElSrcRngEndLn="23" rule="CWE.352.EACM" FirstElSrcRngStartPos="40" lnHash="-1664407388" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="23" locStartPos="40" analyzer="com.parasoft.jtest.flowanalyzer" id="-40624028" lang="java" violId="4c25bed8-7c18-323d-9317-97a8cf3f56ce" locEndPos="65" urgent="true" prio="Not Defined" locEndLn="23" goals="1," locStartln="23" sev="2" locRef="9" tool="jtest" lineHash="-1664407388" unbViolId="0025007e-bdbc-3be9-8fd0-cca6a3ea5255" risk="Undefined" locType="sr" hash="726838777" causeLocRef="9">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="726838777" locRef="9" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" ln="23" srcRngStartPos="40" srcRngEndPos="65" srcRngStartln="23" srcRngEndLn="23" desc="new FileReader(sFileName)" ElType="CP" rngLn="23">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;FileReader&quot; is dangerous and should be validated" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="65" auth="lavanya" FirstElSrcRngEndLn="23" rule="CWE.79.EACM" FirstElSrcRngStartPos="40" lnHash="-1664407388" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="23" locStartPos="40" analyzer="com.parasoft.jtest.flowanalyzer" id="-1270869840" lang="java" violId="d48e6198-9cd5-3523-b2b0-5f25a687d4f5" locEndPos="65" urgent="true" prio="Not Defined" locEndLn="23" goals="1," locStartln="23" sev="2" locRef="9" tool="jtest" lineHash="-1664407388" unbViolId="9485e849-27b1-3b1c-9479-e25e5ce6b52f" risk="Undefined" locType="sr" hash="726838777" causeLocRef="9">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="726838777" locRef="9" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" ln="23" srcRngStartPos="40" srcRngEndPos="65" srcRngStartln="23" srcRngEndLn="23" desc="new FileReader(sFileName)" ElType="CP" rngLn="23">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="58" auth="lavanya" FirstElSrcRngEndLn="16" rule="CWE.352.VPPD" FirstElSrcRngStartPos="8" lnHash="1051795638" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="16" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="203581324" lang="java" violId="a4a21701-51fe-3868-95e0-e2af8f516be9" locEndPos="42" urgent="true" prio="Not Defined" locEndLn="17" goals="1," locStartln="17" sev="2" locRef="11" tool="jtest" lineHash="1051795638" unbViolId="a4033e78-02e0-3d33-9f7a-814e35443b17" risk="Undefined" locType="sr" hash="686946442" causeLocRef="11">
      <Props />
      <ElDescList>
        <ElDesc lineHash="9287163" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="15" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="15" srcRngEndLn="15" desc="String sStoryName = req.getParameter(&quot;story_name&quot;);" ElType="." rngLn="15" />
        <ElDesc lineHash="1383325620" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="16" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="16" srcRngEndLn="16" desc="String sStoryContents = req.getParameter(&quot;story&quot;);" ElType=".C" rngLn="16">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1051795638" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="42" srcRngStartln="17" srcRngEndLn="17" desc="store(sStoryName, sStoryContents);" ElType=".P" rngLn="17">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="58" auth="lavanya" FirstElSrcRngEndLn="16" rule="CWE.79.VPPD" FirstElSrcRngStartPos="8" lnHash="1051795638" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="16" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1171674840" lang="java" violId="d8b73e5c-d647-33cb-99f6-3b7076a3918d" locEndPos="42" urgent="true" prio="Not Defined" locEndLn="17" goals="1," locStartln="17" sev="2" locRef="11" tool="jtest" lineHash="1051795638" unbViolId="5946756f-9155-3736-985d-2546bce52a12" risk="Undefined" locType="sr" hash="686946442" causeLocRef="11">
      <Props />
      <ElDescList>
        <ElDesc lineHash="9287163" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="15" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="15" srcRngEndLn="15" desc="String sStoryName = req.getParameter(&quot;story_name&quot;);" ElType="." rngLn="15" />
        <ElDesc lineHash="1383325620" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="16" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="16" srcRngEndLn="16" desc="String sStoryContents = req.getParameter(&quot;story&quot;);" ElType=".C" rngLn="16">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1051795638" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="42" srcRngStartln="17" srcRngEndLn="17" desc="store(sStoryName, sStoryContents);" ElType=".P" rngLn="17">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a servlet request (&quot;sFileName&quot;) is injected to a file or path name" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="59" auth="lavanya" FirstElSrcRngEndLn="15" rule="CWE.22.TDFNAMES" FirstElSrcRngStartPos="8" lnHash="1826395322" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Protect against File names injection" FirstElSrcRngStartln="15" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="921816077" lang="java" violId="31fedb30-b02f-3f3a-9683-34e978396c44" locEndPos="50" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="1" locRef="11" tool="jtest" lineHash="1826395322" unbViolId="b1846328-3348-3f34-b227-f736e9e7fe0d" risk="Undefined" locType="sr" hash="686946442" causeLocRef="11">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="9287163" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="15" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="15" srcRngEndLn="15" desc="String sStoryName = req.getParameter(&quot;story_name&quot;);" ElType=".C" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="sStoryName" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sStoryName" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1383325620" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="16" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="16" srcRngEndLn="16" desc="String sStoryContents = req.getParameter(&quot;story&quot;);" ElType="." rngLn="16" />
        <ElDesc lineHash="1051795638" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="42" srcRngStartln="17" srcRngEndLn="17" desc="store(sStoryName, sStoryContents);" ElType="!" rngLn="17">
          <ElDescList>
            <ElDesc lineHash="1883769468" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="21" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="21" srcRngEndLn="21" desc="FileOutputStream fOut = null;" ElType="." rngLn="21">
              <Props>
                <Prop key="Tracked variables" val="storyName" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: storyName" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="760693331" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="23" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="23" srcRngEndLn="23" desc="String sFileName = storyName;" ElType="!" rngLn="23" />
            <ElDesc lineHash="1826395322" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="24" srcRngStartPos="19" srcRngEndPos="50" srcRngStartln="24" srcRngEndLn="24" desc="new FileOutputStream(sFileName)" ElType=".P" rngLn="24">
              <Props>
                <Prop key="Tracked variables" val="sFileName" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: sFileName" kind="var" />
                <Ann msg="Call to a dangerous method" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a servlet request (&quot;sFileName&quot;) is injected to a file or path name" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="59" auth="lavanya" FirstElSrcRngEndLn="15" rule="CWE.434.TDFNAMES" FirstElSrcRngStartPos="8" lnHash="1826395322" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Protect against File names injection" FirstElSrcRngStartln="15" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="1545272614" lang="java" violId="f9003bb3-e852-3fda-865f-c330c5c603a4" locEndPos="50" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="1" locRef="11" tool="jtest" lineHash="1826395322" unbViolId="eb2390aa-78de-30f0-95a0-fc623c0755a4" risk="Undefined" locType="sr" hash="686946442" causeLocRef="11">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="9287163" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="15" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="15" srcRngEndLn="15" desc="String sStoryName = req.getParameter(&quot;story_name&quot;);" ElType=".C" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="sStoryName" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sStoryName" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1383325620" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="16" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="16" srcRngEndLn="16" desc="String sStoryContents = req.getParameter(&quot;story&quot;);" ElType="." rngLn="16" />
        <ElDesc lineHash="1051795638" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="42" srcRngStartln="17" srcRngEndLn="17" desc="store(sStoryName, sStoryContents);" ElType="!" rngLn="17">
          <ElDescList>
            <ElDesc lineHash="1883769468" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="21" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="21" srcRngEndLn="21" desc="FileOutputStream fOut = null;" ElType="." rngLn="21">
              <Props>
                <Prop key="Tracked variables" val="storyName" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: storyName" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="760693331" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="23" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="23" srcRngEndLn="23" desc="String sFileName = storyName;" ElType="!" rngLn="23" />
            <ElDesc lineHash="1826395322" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="24" srcRngStartPos="19" srcRngEndPos="50" srcRngStartln="24" srcRngEndLn="24" desc="new FileOutputStream(sFileName)" ElType=".P" rngLn="24">
              <Props>
                <Prop key="Tracked variables" val="sFileName" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: sFileName" kind="var" />
                <Ann msg="Call to a dangerous method" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;FileOutputStream&quot; is dangerous and should be validated" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="50" auth="lavanya" FirstElSrcRngEndLn="24" rule="CWE.352.EACM" FirstElSrcRngStartPos="19" lnHash="1826395322" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="24" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="2015725190" lang="java" violId="43e92c9f-be84-33a9-9286-ed6d582b326a" locEndPos="50" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="2" locRef="11" tool="jtest" lineHash="1826395322" unbViolId="338e251b-c8f3-31d5-ba39-1e1e97b2641e" risk="Undefined" locType="sr" hash="686946442" causeLocRef="11">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1826395322" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="24" srcRngStartPos="19" srcRngEndPos="50" srcRngStartln="24" srcRngEndLn="24" desc="new FileOutputStream(sFileName)" ElType="CP" rngLn="24">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;FileOutputStream&quot; is dangerous and should be validated" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="50" auth="lavanya" FirstElSrcRngEndLn="24" rule="CWE.79.EACM" FirstElSrcRngStartPos="19" lnHash="1826395322" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="24" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="837924434" lang="java" violId="851b2b76-5679-3aa7-a051-3a1a72f3f4e9" locEndPos="50" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="2" locRef="11" tool="jtest" lineHash="1826395322" unbViolId="da0f62a5-a759-3658-ae27-e6473913602a" risk="Undefined" locType="sr" hash="686946442" causeLocRef="11">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1826395322" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="24" srcRngStartPos="19" srcRngEndPos="50" srcRngStartln="24" srcRngEndLn="24" desc="new FileOutputStream(sFileName)" ElType="CP" rngLn="24">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;fOut&quot; may possibly be null" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="lavanya" FirstElSrcRngEndLn="21" rule="CWE.476.NP" FirstElSrcRngStartPos="8" lnHash="-1243101048" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="21" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1498423081" lang="java" violId="3c65de34-91c5-3e59-9825-7344aee52679" locEndPos="25" urgent="true" prio="Not Defined" locEndLn="27" goals="1," locStartln="27" sev="1" locRef="11" tool="jtest" lineHash="-1243101048" unbViolId="d3fa52a9-a111-332e-896f-01463cbbe23f" risk="Undefined" locType="sr" hash="686946442" causeLocRef="11">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1883769468" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="21" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="21" srcRngEndLn="21" desc="FileOutputStream fOut = null;" ElType=".C" rngLn="21">
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: fOut" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="760693331" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="23" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="23" srcRngEndLn="23" desc="String sFileName = storyName;" ElType="." rngLn="23" />
        <ElDesc lineHash="1826395322" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="24" srcRngStartPos="19" srcRngEndPos="50" srcRngStartln="24" srcRngEndLn="24" desc="new FileOutputStream(sFileName)" ElType="!E" rngLn="24" thrownTypes="FileNotFoundException" throwingMethod="FileOutputStream.FileOutputStream">
          <Anns>
            <Ann msg="FileOutputStream.FileOutputStream() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1243101048" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="27" srcRngStartPos="12" srcRngEndPos="25" srcRngStartln="27" srcRngEndLn="27" desc="fOut.close();" ElType=".P" rngLn="27">
          <Anns>
            <Ann msg="Null value carrier: fOut" kind="comment" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="58" auth="lavanya" FirstElSrcRngEndLn="18" rule="CWE.352.VPPD" FirstElSrcRngStartPos="8" lnHash="-548613763" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="18" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1936036119" lang="java" violId="19a96a0b-5a34-3ec8-bc73-ab56e487ca83" locEndPos="110" urgent="true" prio="Not Defined" locEndLn="19" goals="1," locStartln="19" sev="2" locRef="16" tool="jtest" lineHash="-548613763" unbViolId="60c717b4-2cd8-300f-9de0-d6cda4a13fbf" risk="Undefined" locType="sr" hash="1862789318" causeLocRef="16">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-749817472" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="57" srcRngStartln="17" srcRngEndLn="17" desc="String sUserName = request.getParameter(&quot;login&quot;);" ElType="." rngLn="17" />
        <ElDesc lineHash="-772550714" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="18" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="18" srcRngEndLn="18" desc="String sPassword = request.getParameter(&quot;passwd&quot;);" ElType=".C" rngLn="18">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-548613763" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="19" srcRngStartPos="8" srcRngEndPos="110" srcRngStartln="19" srcRngEndLn="19" desc="String sQuery = &quot;SELECT * FROM users WHERE name='&quot; + sUserName + &quot;' AND password='&quot; + sPassword + &quot;'&quot;;" ElType=".P" rngLn="19">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="58" auth="lavanya" FirstElSrcRngEndLn="18" rule="CWE.79.VPPD" FirstElSrcRngStartPos="8" lnHash="-548613763" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="18" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="982622275" lang="java" violId="7cf33a7b-c695-3778-b869-dc899f2156fb" locEndPos="110" urgent="true" prio="Not Defined" locEndLn="19" goals="1," locStartln="19" sev="2" locRef="16" tool="jtest" lineHash="-548613763" unbViolId="420f2c7e-6a71-3387-b2a5-f547007257e8" risk="Undefined" locType="sr" hash="1862789318" causeLocRef="16">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-749817472" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="57" srcRngStartln="17" srcRngEndLn="17" desc="String sUserName = request.getParameter(&quot;login&quot;);" ElType="." rngLn="17" />
        <ElDesc lineHash="-772550714" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="18" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="18" srcRngEndLn="18" desc="String sPassword = request.getParameter(&quot;passwd&quot;);" ElType=".C" rngLn="18">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-548613763" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="19" srcRngStartPos="8" srcRngEndPos="110" srcRngStartln="19" srcRngEndLn="19" desc="String sQuery = &quot;SELECT * FROM users WHERE name='&quot; + sUserName + &quot;' AND password='&quot; + sPassword + &quot;'&quot;;" ElType=".P" rngLn="19">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="lavanya" rule="CWE.89.UPS" lnHash="203786084" pkg="examples.flowanalysis" rule.header="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="085b5d62-256e-3fc5-a75c-cd44c65f1431" locEndPos="48" prio="Not Defined" locEndLn="23" goals="0," locStartln="23" sev="1" locRef="16" tool="jtest" lineHash="203786084" unbViolId="5f6aa134-4eaa-3962-9f64-46614b9ad40d" risk="Undefined" locType="sr" hash="1862789318" />
    <FlowViol msg="Data obtained from a servlet request (&quot;sQuery&quot;) is injected to an SQL query" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="58" auth="lavanya" FirstElSrcRngEndLn="18" rule="CWE.89.TDSQL" FirstElSrcRngStartPos="8" lnHash="-1698291496" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" rule.header="Protect against SQL injection" FirstElSrcRngStartln="18" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="839253993" lang="java" violId="911f8e1c-0ad8-3b92-8201-1c046339a526" locEndPos="42" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="1" locRef="16" tool="jtest" lineHash="-1698291496" unbViolId="2b47efff-3631-333a-b96c-dc74eb5de2b4" risk="Undefined" locType="sr" hash="1862789318" causeLocRef="16">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-749817472" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="57" srcRngStartln="17" srcRngEndLn="17" desc="String sUserName = request.getParameter(&quot;login&quot;);" ElType="." rngLn="17" />
        <ElDesc lineHash="-772550714" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="18" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="18" srcRngEndLn="18" desc="String sPassword = request.getParameter(&quot;passwd&quot;);" ElType=".C" rngLn="18">
          <Props>
            <Prop key="Tracked variables" val="sPassword" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sPassword" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-548613763" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="19" srcRngStartPos="8" srcRngEndPos="110" srcRngStartln="19" srcRngEndLn="19" desc="String sQuery = &quot;SELECT * FROM users WHERE name='&quot; + sUserName + &quot;' AND password='&quot; + sPassword + &quot;'&quot;;" ElType="!" rngLn="19" />
        <ElDesc lineHash="-271783734" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="20" srcRngStartPos="8" srcRngEndPos="30" srcRngStartln="20" srcRngEndLn="20" desc="Statement stmt = null;" ElType="." rngLn="20">
          <Props>
            <Prop key="Tracked variables" val="sQuery" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sQuery" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="920994605" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="21" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="21" srcRngEndLn="21" desc="ResultSet rs = null;" ElType="." rngLn="21" />
        <ElDesc lineHash="203786084" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="23" srcRngStartPos="12" srcRngEndPos="50" srcRngStartln="23" srcRngEndLn="23" desc="stmt = sqlConnection.createStatement()" ElType="." rngLn="23" />
        <ElDesc lineHash="-1698291496" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="24" srcRngStartPos="12" srcRngEndPos="42" srcRngStartln="24" srcRngEndLn="24" desc="rs = stmt.executeQuery(sQuery)" ElType=".P" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="sQuery" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sQuery" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a servlet request (&quot;sQuery&quot;) is injected to an SQL query" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="57" auth="lavanya" FirstElSrcRngEndLn="17" rule="CWE.89.TDSQL" FirstElSrcRngStartPos="8" lnHash="-1698291496" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" rule.header="Protect against SQL injection" FirstElSrcRngStartln="17" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-325170812" lang="java" violId="3a9711d1-9cee-31d1-a261-4bbde56b4922" locEndPos="42" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="1" locRef="16" tool="jtest" lineHash="-1698291496" unbViolId="e0f4599a-fbb3-3b91-94bc-917ebf6e92ce" risk="Undefined" locType="sr" hash="1862789318" causeLocRef="16">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-749817472" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="57" srcRngStartln="17" srcRngEndLn="17" desc="String sUserName = request.getParameter(&quot;login&quot;);" ElType=".C" rngLn="17">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sUserName" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-772550714" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="18" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="18" srcRngEndLn="18" desc="String sPassword = request.getParameter(&quot;passwd&quot;);" ElType="." rngLn="18" />
        <ElDesc lineHash="-548613763" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="19" srcRngStartPos="8" srcRngEndPos="110" srcRngStartln="19" srcRngEndLn="19" desc="String sQuery = &quot;SELECT * FROM users WHERE name='&quot; + sUserName + &quot;' AND password='&quot; + sPassword + &quot;'&quot;;" ElType="!" rngLn="19" />
        <ElDesc lineHash="-271783734" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="20" srcRngStartPos="8" srcRngEndPos="30" srcRngStartln="20" srcRngEndLn="20" desc="Statement stmt = null;" ElType="." rngLn="20">
          <Props>
            <Prop key="Tracked variables" val="sQuery" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sQuery" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="920994605" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="21" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="21" srcRngEndLn="21" desc="ResultSet rs = null;" ElType="." rngLn="21" />
        <ElDesc lineHash="203786084" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="23" srcRngStartPos="12" srcRngEndPos="50" srcRngStartln="23" srcRngEndLn="23" desc="stmt = sqlConnection.createStatement()" ElType="." rngLn="23" />
        <ElDesc lineHash="-1698291496" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="24" srcRngStartPos="12" srcRngEndPos="42" srcRngStartln="24" srcRngEndLn="24" desc="rs = stmt.executeQuery(sQuery)" ElType=".P" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="sQuery" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sQuery" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.352.VPPD" FirstElSrcRngStartPos="15" lnHash="1451955906" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="13" locStartPos="61" analyzer="com.parasoft.jtest.flowanalyzer" id="514880320" lang="java" violId="07af9a6c-40f6-3e7a-a383-d72b57aeb8a0" locEndPos="90" urgent="true" prio="Not Defined" locEndLn="22" goals="1," locStartln="22" sev="2" locRef="17" tool="jtest" lineHash="1451955906" unbViolId="df025964-5625-3592-96c9-e4da87a844f8" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="8" srcRngEndPos="91" srcRngStartln="22" srcRngEndLn="22" desc="String sCommand = &quot;call process_data.exe -params &quot; + getData(&quot;command_parameters&quot;);" ElType="." rngLn="22" />
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="61" srcRngEndPos="90" srcRngStartln="22" srcRngEndLn="22" desc="getData(&quot;command_parameters&quot;)" ElType="!" rngLn="22">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Anns>
                <Ann msg="Point where tainted data is accessed" kind="cause" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="61" srcRngEndPos="90" srcRngStartln="22" srcRngEndLn="22" desc="getData(&quot;command_parameters&quot;)" ElType=".P" rngLn="22">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.79.VPPD" FirstElSrcRngStartPos="15" lnHash="1451955906" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="13" locStartPos="61" analyzer="com.parasoft.jtest.flowanalyzer" id="1464091156" lang="java" violId="b34c9f87-475f-3a5e-87eb-e7c93ce7b038" locEndPos="90" urgent="true" prio="Not Defined" locEndLn="22" goals="1," locStartln="22" sev="2" locRef="17" tool="jtest" lineHash="1451955906" unbViolId="988fbdcb-e385-3b32-8f0f-9ec574ef3006" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="8" srcRngEndPos="91" srcRngStartln="22" srcRngEndLn="22" desc="String sCommand = &quot;call process_data.exe -params &quot; + getData(&quot;command_parameters&quot;);" ElType="." rngLn="22" />
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="61" srcRngEndPos="90" srcRngStartln="22" srcRngEndLn="22" desc="getData(&quot;command_parameters&quot;)" ElType="!" rngLn="22">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Anns>
                <Ann msg="Point where tainted data is accessed" kind="cause" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="61" srcRngEndPos="90" srcRngStartln="22" srcRngEndLn="22" desc="getData(&quot;command_parameters&quot;)" ElType=".P" rngLn="22">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a servlet request (&quot;sCommand&quot;) is injected to a command executing method" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.77.TDCMD" FirstElSrcRngStartPos="15" lnHash="1948805676" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Protect against Command injection" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-444221758" lang="java" violId="c615ced4-ec62-37d6-8bd4-55a5eb37f5e6" locEndPos="44" urgent="true" prio="Not Defined" locEndLn="23" goals="1," locStartln="23" sev="1" locRef="17" tool="jtest" lineHash="1948805676" unbViolId="77c5241e-2413-320f-82ea-49aeba4c2419" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="8" srcRngEndPos="91" srcRngStartln="22" srcRngEndLn="22" desc="String sCommand = &quot;call process_data.exe -params &quot; + getData(&quot;command_parameters&quot;);" ElType="." rngLn="22" />
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="61" srcRngEndPos="90" srcRngStartln="22" srcRngEndLn="22" desc="getData(&quot;command_parameters&quot;)" ElType="!" rngLn="22">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Props>
                <Prop key="Tracked variables" val="_req.getParameter(sParamName)" />
              </Props>
              <Anns>
                <Ann msg="Tainting point" kind="cause" />
                <Ann msg="Tainted data: _req.getParameter(sParamName)" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="8" srcRngEndPos="91" srcRngStartln="22" srcRngEndLn="22" desc="String sCommand = &quot;call process_data.exe -params &quot; + getData(&quot;command_parameters&quot;);" ElType="!" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="String sCommand = &quot;call process_data.exe -params &quot; + getData...ommand_parameters&quot;);" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: String sCommand = &quot;call process_data.exe -params &quot; + getData...ommand_parameters&quot;);" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1948805676" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="23" srcRngStartPos="8" srcRngEndPos="44" srcRngStartln="23" srcRngEndLn="23" desc="Runtime.getRuntime().exec(sCommand);" ElType=".P" rngLn="23">
          <Props>
            <Prop key="Tracked variables" val="sCommand" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sCommand" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a servlet request (&quot;sCommand&quot;) is injected to a command executing method" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.78.TDCMD" FirstElSrcRngStartPos="15" lnHash="1948805676" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Protect against Command injection" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-1364495487" lang="java" violId="2995efd9-4b20-3615-b599-04fa1812293e" locEndPos="44" urgent="true" prio="Not Defined" locEndLn="23" goals="1," locStartln="23" sev="1" locRef="17" tool="jtest" lineHash="1948805676" unbViolId="d306a1fb-4d12-33ed-a461-16cf2b11715e" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="8" srcRngEndPos="91" srcRngStartln="22" srcRngEndLn="22" desc="String sCommand = &quot;call process_data.exe -params &quot; + getData(&quot;command_parameters&quot;);" ElType="." rngLn="22" />
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="61" srcRngEndPos="90" srcRngStartln="22" srcRngEndLn="22" desc="getData(&quot;command_parameters&quot;)" ElType="!" rngLn="22">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Props>
                <Prop key="Tracked variables" val="_req.getParameter(sParamName)" />
              </Props>
              <Anns>
                <Ann msg="Tainting point" kind="cause" />
                <Ann msg="Tainted data: _req.getParameter(sParamName)" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="8" srcRngEndPos="91" srcRngStartln="22" srcRngEndLn="22" desc="String sCommand = &quot;call process_data.exe -params &quot; + getData(&quot;command_parameters&quot;);" ElType="!" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="String sCommand = &quot;call process_data.exe -params &quot; + getData...ommand_parameters&quot;);" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: String sCommand = &quot;call process_data.exe -params &quot; + getData...ommand_parameters&quot;);" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1948805676" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="23" srcRngStartPos="8" srcRngEndPos="44" srcRngStartln="23" srcRngEndLn="23" desc="Runtime.getRuntime().exec(sCommand);" ElType=".P" rngLn="23">
          <Props>
            <Prop key="Tracked variables" val="sCommand" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sCommand" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.352.VPPD" FirstElSrcRngStartPos="15" lnHash="1635634366" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-497709717" lang="java" violId="1397c574-eeb4-39ba-9a5f-4e6c73e4bde6" locEndPos="73" urgent="true" prio="Not Defined" locEndLn="31" goals="1," locStartln="31" sev="2" locRef="17" tool="jtest" lineHash="1635634366" unbViolId="fcd3c9a2-4127-37ab-b73b-315c7fc044cc" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1635634366" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="31" srcRngStartPos="51" srcRngEndPos="71" srcRngStartln="31" srcRngEndLn="31" desc="getData(&quot;user_data&quot;)" ElType="!" rngLn="31">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Anns>
                <Ann msg="Point where tainted data is accessed" kind="cause" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1635634366" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="31" srcRngStartPos="8" srcRngEndPos="73" srcRngStartln="31" srcRngEndLn="31" desc="String sSomeResultingString = processValue(getData(&quot;user_data&quot;));" ElType=".P" rngLn="31">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.79.VPPD" FirstElSrcRngStartPos="15" lnHash="1635634366" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-1415463873" lang="java" violId="a60cb4c4-6ad8-39d9-b024-23ec12a026be" locEndPos="73" urgent="true" prio="Not Defined" locEndLn="31" goals="1," locStartln="31" sev="2" locRef="17" tool="jtest" lineHash="1635634366" unbViolId="05a7eab6-7534-32f4-a8af-523e7d3e84cf" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1635634366" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="31" srcRngStartPos="51" srcRngEndPos="71" srcRngStartln="31" srcRngEndLn="31" desc="getData(&quot;user_data&quot;)" ElType="!" rngLn="31">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Anns>
                <Ann msg="Point where tainted data is accessed" kind="cause" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1635634366" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="31" srcRngStartPos="8" srcRngEndPos="73" srcRngStartln="31" srcRngEndLn="31" desc="String sSomeResultingString = processValue(getData(&quot;user_data&quot;));" ElType=".P" rngLn="31">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Setting the System property &quot;someProperty&quot;" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" auth="Developer007" rule="CWE.20.SYSP" lnHash="-1399063460" pkg="examples.flowanalysis" rule.header="Do not access or set System properties" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7cb621f6-3ee7-3278-816b-e4671e76a3db" locEndPos="26" urgent="true" prio="Not Defined" locEndLn="32" goals="1," locStartln="32" sev="2" locRef="17" tool="jtest" lineHash="-1399063460" unbViolId="2eb7ed3e-a494-33dd-a373-989b159e7895" risk="Undefined" locType="sr" hash="-152258803" />
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="41" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.352.VPPD" FirstElSrcRngStartPos="15" lnHash="-2010188740" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1202490571" lang="java" violId="eafede70-44ff-3b17-9dea-3f868f026b63" locEndPos="67" urgent="true" prio="Not Defined" locEndLn="41" goals="1," locStartln="41" sev="2" locRef="17" tool="jtest" lineHash="-2010188740" unbViolId="ff306509-c140-35e4-81d7-344a8944cb7c" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-2010188740" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="41" srcRngStartPos="38" srcRngEndPos="65" srcRngStartln="41" srcRngEndLn="41" desc="getData(&quot;operation_needed&quot;)" ElType="!" rngLn="41">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Anns>
                <Ann msg="Point where tainted data is accessed" kind="cause" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-2010188740" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="41" srcRngStartPos="8" srcRngEndPos="67" srcRngStartln="41" srcRngEndLn="41" desc="String libName = processValue(getData(&quot;operation_needed&quot;));" ElType=".P" rngLn="41">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="41" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.79.VPPD" FirstElSrcRngStartPos="15" lnHash="-2010188740" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="240696735" lang="java" violId="1df02d48-d1d0-38a9-88ce-ce840c066f3e" locEndPos="67" urgent="true" prio="Not Defined" locEndLn="41" goals="1," locStartln="41" sev="2" locRef="17" tool="jtest" lineHash="-2010188740" unbViolId="e0038993-ee6e-395c-a03b-94c8b6912f21" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-2010188740" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="41" srcRngStartPos="38" srcRngEndPos="65" srcRngStartln="41" srcRngEndLn="41" desc="getData(&quot;operation_needed&quot;)" ElType="!" rngLn="41">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Anns>
                <Ann msg="Point where tainted data is accessed" kind="cause" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-2010188740" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="41" srcRngStartPos="8" srcRngEndPos="67" srcRngStartln="41" srcRngEndLn="41" desc="String libName = processValue(getData(&quot;operation_needed&quot;));" ElType=".P" rngLn="41">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a servlet request (&quot;libName&quot;) is injected to a library loading method" ln="42" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.20.TDLIB" FirstElSrcRngStartPos="15" lnHash="-308926192" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Protect against Library injection" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-4657658" lang="java" violId="4d32f22c-7f32-331f-937f-cbea8006c036" locEndPos="36" urgent="true" prio="Not Defined" locEndLn="42" goals="1," locStartln="42" sev="1" locRef="17" tool="jtest" lineHash="-308926192" unbViolId="e75d65e7-6b0d-3c71-a9d4-cd62b3a4ff16" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-2010188740" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="41" srcRngStartPos="38" srcRngEndPos="65" srcRngStartln="41" srcRngEndLn="41" desc="getData(&quot;operation_needed&quot;)" ElType="!" rngLn="41">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Props>
                <Prop key="Tracked variables" val="_req.getParameter(sParamName)" />
              </Props>
              <Anns>
                <Ann msg="Tainting point" kind="cause" />
                <Ann msg="Tainted data: _req.getParameter(sParamName)" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-2010188740" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="41" srcRngStartPos="8" srcRngEndPos="67" srcRngStartln="41" srcRngEndLn="41" desc="String libName = processValue(getData(&quot;operation_needed&quot;));" ElType="!" rngLn="41">
          <Props>
            <Prop key="Tracked variables" val="getData(&quot;operation_needed&quot;)" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: getData(&quot;operation_needed&quot;)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-308926192" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="42" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="42" srcRngEndLn="42" desc="System.loadLibrary(libName);" ElType=".P" rngLn="42">
          <Props>
            <Prop key="Tracked variables" val="libName" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: libName" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="API call 'System.loadLibrary()' has potential to bypass security" ln="42" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" auth="Developer007" rule="CWE.20.APIBS" lnHash="-308926192" pkg="examples.flowanalysis" rule.header="Inspect usage of standard API calls that bypass security" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d65c60cd-faa9-3990-8483-7afaaa602cfd" locEndPos="26" urgent="true" prio="Not Defined" locEndLn="42" goals="1," locStartln="42" sev="3" locRef="17" tool="jtest" lineHash="-308926192" unbViolId="c7539e92-03e5-3207-b6cf-8cf80bbbfcff" risk="Undefined" locType="sr" hash="-152258803" />
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="48" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.352.VPPD" FirstElSrcRngStartPos="15" lnHash="-197347714" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1202490571" lang="java" violId="856fc7f0-dbc5-39a1-bf96-29dfdb3fb7b4" locEndPos="70" urgent="true" prio="Not Defined" locEndLn="48" goals="1," locStartln="48" sev="2" locRef="17" tool="jtest" lineHash="-197347714" unbViolId="9bb77556-8e26-3a49-bb0b-1d39c91a52e3" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-197347714" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="48" srcRngStartPos="41" srcRngEndPos="68" srcRngStartln="48" srcRngEndLn="48" desc="getData(&quot;operation_needed&quot;)" ElType="!" rngLn="48">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Anns>
                <Ann msg="Point where tainted data is accessed" kind="cause" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-197347714" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="48" srcRngStartPos="8" srcRngEndPos="70" srcRngStartln="48" srcRngEndLn="48" desc="String sClassName = processValue(getData(&quot;operation_needed&quot;));" ElType=".P" rngLn="48">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="48" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.79.VPPD" FirstElSrcRngStartPos="15" lnHash="-197347714" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="240696735" lang="java" violId="044bacff-f07f-3e2f-ab52-16d5c63aa76f" locEndPos="70" urgent="true" prio="Not Defined" locEndLn="48" goals="1," locStartln="48" sev="2" locRef="17" tool="jtest" lineHash="-197347714" unbViolId="e266bfa1-be35-33b5-bbc8-0f6f74d8dc9c" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-197347714" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="48" srcRngStartPos="41" srcRngEndPos="68" srcRngStartln="48" srcRngEndLn="48" desc="getData(&quot;operation_needed&quot;)" ElType="!" rngLn="48">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Anns>
                <Ann msg="Point where tainted data is accessed" kind="cause" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-197347714" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="48" srcRngStartPos="8" srcRngEndPos="70" srcRngStartln="48" srcRngEndLn="48" desc="String sClassName = processValue(getData(&quot;operation_needed&quot;));" ElType=".P" rngLn="48">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a servlet request (&quot;sClassName&quot;) is injected to a Java reflection method" ln="49" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="CWE.20.TDRFL" FirstElSrcRngStartPos="15" lnHash="-1369445572" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Protect against Reflection injection" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-107452684" lang="java" violId="b20ca6bf-970d-31c3-879f-dcd43160302d" locEndPos="65" urgent="true" prio="Not Defined" locEndLn="49" goals="1," locStartln="49" sev="1" locRef="17" tool="jtest" lineHash="-1369445572" unbViolId="fac74814-f2b5-3172-ba4d-a37e0005407d" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-197347714" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="48" srcRngStartPos="41" srcRngEndPos="68" srcRngStartln="48" srcRngEndLn="48" desc="getData(&quot;operation_needed&quot;)" ElType="!" rngLn="48">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Props>
                <Prop key="Tracked variables" val="_req.getParameter(sParamName)" />
              </Props>
              <Anns>
                <Ann msg="Tainting point" kind="cause" />
                <Ann msg="Tainted data: _req.getParameter(sParamName)" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-197347714" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="48" srcRngStartPos="8" srcRngEndPos="70" srcRngStartln="48" srcRngEndLn="48" desc="String sClassName = processValue(getData(&quot;operation_needed&quot;));" ElType="!" rngLn="48">
          <Props>
            <Prop key="Tracked variables" val="getData(&quot;operation_needed&quot;)" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: getData(&quot;operation_needed&quot;)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1369445572" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="49" srcRngStartPos="8" srcRngEndPos="65" srcRngStartln="49" srcRngEndLn="49" desc="ClassLoader.getSystemClassLoader().loadClass(sClassName);" ElType=".P" rngLn="49">
          <Props>
            <Prop key="Tracked variables" val="sClassName" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sClassName" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="API call 'ClassLoader.getSystemClassLoader()' has potential to bypass security" ln="49" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" auth="Developer007" rule="CWE.20.APIBS" lnHash="-1369445572" pkg="examples.flowanalysis" rule.header="Inspect usage of standard API calls that bypass security" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="46ae883e-eba0-37d9-bba6-42005731d362" locEndPos="40" urgent="true" prio="Not Defined" locEndLn="49" goals="1," locStartln="49" sev="3" locRef="17" tool="jtest" lineHash="-1369445572" unbViolId="8708a67c-e264-37f7-90b4-85bdd9ee6a88" risk="Undefined" locType="sr" hash="-152258803" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="lavanya" rule="CWE.200.SIO" lnHash="711302723" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0edcf901-ead8-3ca1-af2f-d6f8c733acad" locEndPos="87" prio="Not Defined" locEndLn="10" goals="0," locStartln="10" sev="3" locRef="18" tool="jtest" lineHash="711302723" unbViolId="436d8397-b4e8-3c1c-a5e2-14527c6427c1" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="lavanya" rule="CWE.200.SIO" lnHash="404167856" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c3868f2a-65f8-35ad-84b2-d8b9dde38025" locEndPos="62" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="18" tool="jtest" lineHash="404167856" unbViolId="322265b2-93bd-36d4-a314-ebc9f0da92f7" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="lavanya" rule="CWE.200.SIO" lnHash="182383146" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="041083bc-efa1-3e41-adc8-ca9fcfd2338a" locEndPos="50" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="3" locRef="18" tool="jtest" lineHash="182383146" unbViolId="be2e3be5-dd3d-3bf4-b3d4-c4d790dc6549" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="lavanya" rule="CWE.200.SIO" lnHash="645970007" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2e04ef01-3751-3461-82ad-15a20d5ad3cb" locEndPos="53" prio="Not Defined" locEndLn="35" goals="0," locStartln="35" sev="3" locRef="18" tool="jtest" lineHash="645970007" unbViolId="76d2a70a-2f81-3f5c-b628-a4a29fe259e4" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="39" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-55584185" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9d9cfdec-f940-38af-9859-231f6080ae6f" locEndPos="50" prio="Not Defined" locEndLn="39" goals="0," locStartln="39" sev="3" locRef="18" tool="jtest" lineHash="-55584185" unbViolId="e4c12ce3-0304-3e96-9366-d45d9b07015d" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="42" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1995739522" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="90483024-b7b2-3530-ac1b-e4206ef189d1" locEndPos="48" prio="Not Defined" locEndLn="42" goals="0," locStartln="42" sev="3" locRef="18" tool="jtest" lineHash="1995739522" unbViolId="4b6398f9-5c15-3058-b7bb-1fa3eac56288" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="45" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="lavanya" rule="CWE.200.SIO" lnHash="463322842" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0aed2702-bfe8-3965-ace0-e7a85200ca02" locEndPos="50" prio="Not Defined" locEndLn="45" goals="0," locStartln="45" sev="3" locRef="18" tool="jtest" lineHash="463322842" unbViolId="8ae349a1-fa94-3278-b213-bb8a92cf789b" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-1163022704" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e5cf099f-eba5-351e-b4da-e09a40cce1e5" locEndPos="51" prio="Not Defined" locEndLn="23" goals="0," locStartln="23" sev="3" locRef="20" tool="jtest" lineHash="-1163022704" unbViolId="121976cb-2305-3e27-a8cc-c63ba70d50b6" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="The object read from the ObjectInputStream is not validated before deserialization" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="lavanya" rule="CWE.502.VOBD" lnHash="-895251233" pkg="examples.flowanalysis" rule.header="Validate objects before deserialization" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6ecb92bd-5289-3fb7-887a-81b459001bb4" locEndPos="44" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="20" tool="jtest" lineHash="-895251233" unbViolId="ae9abd9f-e09e-38a2-915c-c4fb1b570e76" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="The object read from the ObjectInputStream is not validated before deserialization" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="lavanya" rule="CWE.502.VOBD" lnHash="570134625" pkg="examples.flowanalysis" rule.header="Validate objects before deserialization" locStartPos="46" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5af03063-17fa-3465-87df-5f7c9527c19b" locEndPos="65" prio="Not Defined" locEndLn="31" goals="0," locStartln="31" sev="3" locRef="20" tool="jtest" lineHash="570134625" unbViolId="3ea8bff1-871d-3eae-838e-f40468690366" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="34" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-1963747990" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ffa261ea-0791-3615-970d-3a045047fef4" locEndPos="66" prio="Not Defined" locEndLn="34" goals="0," locStartln="34" sev="3" locRef="20" tool="jtest" lineHash="-1963747990" unbViolId="5e2ba142-c622-3ecb-949c-86b5bd640a75" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-107142727" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a43a84cb-8cf3-33b8-9f34-4603a339aeae" locEndPos="54" prio="Not Defined" locEndLn="37" goals="0," locStartln="37" sev="3" locRef="20" tool="jtest" lineHash="-107142727" unbViolId="64eaf69c-bc68-3fa7-a0a9-de880ba57b05" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="The object read from the ObjectInputStream is not validated before deserialization" ln="38" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="lavanya" rule="CWE.502.VOBD" lnHash="728817534" pkg="examples.flowanalysis" rule.header="Validate objects before deserialization" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c6a5cbe4-ac87-3704-867e-a4f3990f3f60" locEndPos="41" prio="Not Defined" locEndLn="38" goals="0," locStartln="38" sev="3" locRef="20" tool="jtest" lineHash="728817534" unbViolId="121e9c36-7785-3512-903f-98bbdf6a5a33" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="Consider using a &quot;Context&quot; Object instead of calling 'getParameter()'" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="lavanya" rule="CWE.20.UCO" lnHash="1314402360" pkg="examples.flowanalysis" rule.header="Use a Context Object to manage HTTP request parameters" locStartPos="31" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="35dc80b8-ad5c-3ae2-9e59-f46c1b2e87c8" locEndPos="43" prio="Not Defined" locEndLn="33" goals="0," locStartln="33" sev="2" locRef="21" tool="jtest" lineHash="1314402360" unbViolId="1dafc582-6d52-38ad-be51-b7a8a42fa2d4" risk="Undefined" locType="sr" hash="565976681" />
    <FlowViol msg="Data obtained from a servlet request (&quot;sUserName&quot;) is injected to a servlet response (possible XSS attack)" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="56" auth="lavanya" FirstElSrcRngEndLn="33" rule="CWE.352.TDXSS" FirstElSrcRngStartPos="8" lnHash="126438163" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" rule.header="Protect against XSS vulnerabilities" FirstElSrcRngStartln="33" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-730171928" lang="java" violId="78c426d5-2345-3614-b870-66359edf68d3" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="35" goals="1," locStartln="35" sev="1" locRef="21" tool="jtest" lineHash="126438163" unbViolId="778a2cfe-7f86-3add-aa46-df6548b96135" risk="Undefined" locType="sr" hash="565976681" causeLocRef="21">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1058819641" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="31" srcRngStartPos="8" srcRngEndPos="62" srcRngStartln="31" srcRngEndLn="31" desc="ServletOutputStream response = resp.getOutputStream();" ElType="." rngLn="31" />
        <ElDesc lineHash="-1384907763" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="32" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="32" srcRngEndLn="32" desc="addHeader(response);" ElType="." rngLn="32">
          <ElDescList>
            <ElDesc lineHash="1698089777" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="42" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="42" srcRngEndLn="42" desc="response.print(&quot;&lt;HTML>\n&quot;);" ElType="." rngLn="42" />
            <ElDesc lineHash="1293102263" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="43" srcRngStartPos="8" srcRngEndPos="72" srcRngStartln="43" srcRngEndLn="43" desc="response.print(&quot;&lt;HEAD>&lt;TITLE>Example webpage&lt;/TITLE>&lt;/HEAD>\n&quot;);" ElType="." rngLn="43" />
            <ElDesc lineHash="-823236632" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="44" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="44" srcRngEndLn="44" desc="response.print(&quot;&lt;BODY>\n&quot;);" ElType="." rngLn="44" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1314402360" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="33" srcRngStartPos="8" srcRngEndPos="56" srcRngStartln="33" srcRngEndLn="33" desc="String sUserName = req.getParameter(&quot;username&quot;);" ElType=".C" rngLn="33">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sUserName" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1982726760" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="34" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="34" srcRngEndLn="34" desc="response.print(&quot;Welcome, &quot;);" ElType="." rngLn="34" />
        <ElDesc lineHash="126438163" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="35" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="35" srcRngEndLn="35" desc="response.print(sUserName);" ElType=".P" rngLn="35">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sUserName" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a servlet request (&quot;sUserName&quot;) is injected to a servlet response (possible XSS attack)" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="56" auth="lavanya" FirstElSrcRngEndLn="33" rule="CWE.79.TDXSS" FirstElSrcRngStartPos="8" lnHash="126438163" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" rule.header="Protect against XSS vulnerabilities" FirstElSrcRngStartln="33" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-1833165988" lang="java" violId="f1fd333d-9c19-3ddd-b9f7-deb528d20054" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="35" goals="1," locStartln="35" sev="1" locRef="21" tool="jtest" lineHash="126438163" unbViolId="6cba65bb-c57c-3319-a9d0-980d097d00f6" risk="Undefined" locType="sr" hash="565976681" causeLocRef="21">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1058819641" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="31" srcRngStartPos="8" srcRngEndPos="62" srcRngStartln="31" srcRngEndLn="31" desc="ServletOutputStream response = resp.getOutputStream();" ElType="." rngLn="31" />
        <ElDesc lineHash="-1384907763" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="32" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="32" srcRngEndLn="32" desc="addHeader(response);" ElType="." rngLn="32">
          <ElDescList>
            <ElDesc lineHash="1698089777" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="42" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="42" srcRngEndLn="42" desc="response.print(&quot;&lt;HTML>\n&quot;);" ElType="." rngLn="42" />
            <ElDesc lineHash="1293102263" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="43" srcRngStartPos="8" srcRngEndPos="72" srcRngStartln="43" srcRngEndLn="43" desc="response.print(&quot;&lt;HEAD>&lt;TITLE>Example webpage&lt;/TITLE>&lt;/HEAD>\n&quot;);" ElType="." rngLn="43" />
            <ElDesc lineHash="-823236632" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="44" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="44" srcRngEndLn="44" desc="response.print(&quot;&lt;BODY>\n&quot;);" ElType="." rngLn="44" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1314402360" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="33" srcRngStartPos="8" srcRngEndPos="56" srcRngStartln="33" srcRngEndLn="33" desc="String sUserName = req.getParameter(&quot;username&quot;);" ElType=".C" rngLn="33">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sUserName" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1982726760" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="34" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="34" srcRngEndLn="34" desc="response.print(&quot;Welcome, &quot;);" ElType="." rngLn="34" />
        <ElDesc lineHash="126438163" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="35" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="35" srcRngEndLn="35" desc="response.print(sUserName);" ElType=".P" rngLn="35">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sUserName" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="56" auth="lavanya" FirstElSrcRngEndLn="33" rule="CWE.352.VPPD" FirstElSrcRngStartPos="8" lnHash="126438163" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="33" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-505761890" lang="java" violId="eb1eb418-71f4-3283-9a57-0098a331e752" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="35" goals="1," locStartln="35" sev="2" locRef="21" tool="jtest" lineHash="126438163" unbViolId="73304a15-56a2-3a8c-ae15-0e927e405423" risk="Undefined" locType="sr" hash="565976681" causeLocRef="21">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1058819641" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="31" srcRngStartPos="8" srcRngEndPos="62" srcRngStartln="31" srcRngEndLn="31" desc="ServletOutputStream response = resp.getOutputStream();" ElType="." rngLn="31" />
        <ElDesc lineHash="-1384907763" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="32" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="32" srcRngEndLn="32" desc="addHeader(response);" ElType="." rngLn="32">
          <ElDescList>
            <ElDesc lineHash="1698089777" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="42" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="42" srcRngEndLn="42" desc="response.print(&quot;&lt;HTML>\n&quot;);" ElType="." rngLn="42" />
            <ElDesc lineHash="1293102263" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="43" srcRngStartPos="8" srcRngEndPos="72" srcRngStartln="43" srcRngEndLn="43" desc="response.print(&quot;&lt;HEAD>&lt;TITLE>Example webpage&lt;/TITLE>&lt;/HEAD>\n&quot;);" ElType="." rngLn="43" />
            <ElDesc lineHash="-823236632" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="44" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="44" srcRngEndLn="44" desc="response.print(&quot;&lt;BODY>\n&quot;);" ElType="." rngLn="44" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1314402360" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="33" srcRngStartPos="8" srcRngEndPos="56" srcRngStartln="33" srcRngEndLn="33" desc="String sUserName = req.getParameter(&quot;username&quot;);" ElType=".C" rngLn="33">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1982726760" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="34" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="34" srcRngEndLn="34" desc="response.print(&quot;Welcome, &quot;);" ElType="." rngLn="34" />
        <ElDesc lineHash="126438163" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="35" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="35" srcRngEndLn="35" desc="response.print(sUserName);" ElType=".P" rngLn="35">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="56" auth="lavanya" FirstElSrcRngEndLn="33" rule="CWE.79.VPPD" FirstElSrcRngStartPos="8" lnHash="126438163" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="33" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-1473339702" lang="java" violId="74ff3bd6-eb23-3eb5-9352-b38fc4fcb9f3" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="35" goals="1," locStartln="35" sev="2" locRef="21" tool="jtest" lineHash="126438163" unbViolId="59e27bee-1b9b-3cee-9159-1694d1dd91e7" risk="Undefined" locType="sr" hash="565976681" causeLocRef="21">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1058819641" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="31" srcRngStartPos="8" srcRngEndPos="62" srcRngStartln="31" srcRngEndLn="31" desc="ServletOutputStream response = resp.getOutputStream();" ElType="." rngLn="31" />
        <ElDesc lineHash="-1384907763" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="32" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="32" srcRngEndLn="32" desc="addHeader(response);" ElType="." rngLn="32">
          <ElDescList>
            <ElDesc lineHash="1698089777" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="42" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="42" srcRngEndLn="42" desc="response.print(&quot;&lt;HTML>\n&quot;);" ElType="." rngLn="42" />
            <ElDesc lineHash="1293102263" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="43" srcRngStartPos="8" srcRngEndPos="72" srcRngStartln="43" srcRngEndLn="43" desc="response.print(&quot;&lt;HEAD>&lt;TITLE>Example webpage&lt;/TITLE>&lt;/HEAD>\n&quot;);" ElType="." rngLn="43" />
            <ElDesc lineHash="-823236632" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="44" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="44" srcRngEndLn="44" desc="response.print(&quot;&lt;BODY>\n&quot;);" ElType="." rngLn="44" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1314402360" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="33" srcRngStartPos="8" srcRngEndPos="56" srcRngStartln="33" srcRngEndLn="33" desc="String sUserName = req.getParameter(&quot;username&quot;);" ElType=".C" rngLn="33">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1982726760" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="34" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="34" srcRngEndLn="34" desc="response.print(&quot;Welcome, &quot;);" ElType="." rngLn="34" />
        <ElDesc lineHash="126438163" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="35" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="35" srcRngEndLn="35" desc="response.print(sUserName);" ElType=".P" rngLn="35">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a parameter passed to a remote method (&quot;userAttrName&quot;) is injected to an XML document" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="49" auth="lavanya" FirstElSrcRngEndLn="22" rule="CWE.79.TDXML" FirstElSrcRngStartPos="9" lnHash="1823710720" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" rule.header="Protect against XML data injection" FirstElSrcRngStartln="21" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-1216793266" lang="java" violId="52b11871-a019-37b6-b256-df383d28ea1f" locEndPos="60" urgent="true" prio="Not Defined" locEndLn="26" goals="1," locStartln="26" sev="1" locRef="22" tool="jtest" lineHash="1823710720" unbViolId="9959df1c-56f2-34f5-ae70-110b1ea677d8" risk="Undefined" locType="sr" hash="-367659159" causeLocRef="22">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1160252530" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="21" srcRngStartPos="9" srcRngEndPos="49" srcRngStartln="21" srcRngEndLn="22" desc="createXMLDocumentAndStoreData(Document document, String sUserId, String sUserName, String sDataType," ElType=".C" rngLn="21">
          <Props>
            <Prop key="Tracked variables" val="sUserId" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sUserId" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="579819957" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="25" srcRngStartPos="8" srcRngEndPos="47" srcRngStartln="25" srcRngEndLn="25" desc="String userAttrName = &quot;User&quot; + sUserId;" ElType="!" rngLn="25" />
        <ElDesc lineHash="1823710720" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="26" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="26" srcRngEndLn="26" desc="Element user = document.createElement(userAttrName);" ElType=".P" rngLn="26">
          <Props>
            <Prop key="Tracked variables" val="userAttrName" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: userAttrName" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a parameter passed to a remote method (&quot;sUserName&quot;) is injected to an XML document" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="49" auth="lavanya" FirstElSrcRngEndLn="22" rule="CWE.79.TDXML" FirstElSrcRngStartPos="9" lnHash="-114337401" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" rule.header="Protect against XML data injection" FirstElSrcRngStartln="21" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="362204414" lang="java" violId="703af04a-356e-3dad-b200-30036edc4d00" locEndPos="45" urgent="true" prio="Not Defined" locEndLn="27" goals="1," locStartln="27" sev="1" locRef="22" tool="jtest" lineHash="-114337401" unbViolId="a3ca7477-db85-35c2-b0f3-9592dbe7fbbd" risk="Undefined" locType="sr" hash="-367659159" causeLocRef="22">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1160252530" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="21" srcRngStartPos="9" srcRngEndPos="49" srcRngStartln="21" srcRngEndLn="22" desc="createXMLDocumentAndStoreData(Document document, String sUserId, String sUserName, String sDataType," ElType=".C" rngLn="21">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sUserName" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="579819957" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="25" srcRngStartPos="8" srcRngEndPos="47" srcRngStartln="25" srcRngEndLn="25" desc="String userAttrName = &quot;User&quot; + sUserId;" ElType="." rngLn="25" />
        <ElDesc lineHash="1823710720" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="26" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="26" srcRngEndLn="26" desc="Element user = document.createElement(userAttrName);" ElType="." rngLn="26" />
        <ElDesc lineHash="-114337401" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="27" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="27" srcRngEndLn="27" desc="user.setAttribute(&quot;name&quot;, sUserName);" ElType=".P" rngLn="27">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sUserName" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a parameter passed to a remote method (&quot;sDataType&quot;) is injected to an XML document" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="49" auth="lavanya" FirstElSrcRngEndLn="22" rule="CWE.79.TDXML" FirstElSrcRngStartPos="9" lnHash="-1128345384" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" rule.header="Protect against XML data injection" FirstElSrcRngStartln="21" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-2056908952" lang="java" violId="944b9b94-cf2d-3fc6-a18a-f0ee6e85b7c6" locEndPos="61" urgent="true" prio="Not Defined" locEndLn="28" goals="1," locStartln="28" sev="1" locRef="22" tool="jtest" lineHash="-1128345384" unbViolId="ad6c8a3d-7a23-3577-adfc-543558bf6db3" risk="Undefined" locType="sr" hash="-367659159" causeLocRef="22">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1160252530" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="21" srcRngStartPos="9" srcRngEndPos="49" srcRngStartln="21" srcRngEndLn="22" desc="createXMLDocumentAndStoreData(Document document, String sUserId, String sUserName, String sDataType," ElType=".C" rngLn="21">
          <Props>
            <Prop key="Tracked variables" val="sDataType" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sDataType" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="579819957" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="25" srcRngStartPos="8" srcRngEndPos="47" srcRngStartln="25" srcRngEndLn="25" desc="String userAttrName = &quot;User&quot; + sUserId;" ElType="." rngLn="25" />
        <ElDesc lineHash="1823710720" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="26" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="26" srcRngEndLn="26" desc="Element user = document.createElement(userAttrName);" ElType="." rngLn="26" />
        <ElDesc lineHash="-114337401" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="27" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="27" srcRngEndLn="27" desc="user.setAttribute(&quot;name&quot;, sUserName);" ElType="." rngLn="27" />
        <ElDesc lineHash="-1128345384" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="28" srcRngStartPos="8" srcRngEndPos="61" srcRngStartln="28" srcRngEndLn="28" desc="Element userData = document.createElement(sDataType);" ElType=".P" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="sDataType" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sDataType" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a parameter passed to a remote method (&quot;sData&quot;) is injected to an XML document" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="49" auth="lavanya" FirstElSrcRngEndLn="22" rule="CWE.79.TDXML" FirstElSrcRngStartPos="9" lnHash="917005069" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" rule.header="Protect against XML data injection" FirstElSrcRngStartln="21" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-88081313" lang="java" violId="2f5f312d-0703-314e-8e31-03b2b3acb391" locEndPos="37" urgent="true" prio="Not Defined" locEndLn="29" goals="1," locStartln="29" sev="1" locRef="22" tool="jtest" lineHash="917005069" unbViolId="af246c9a-0273-36ed-b668-1d0c85d5cb6c" risk="Undefined" locType="sr" hash="-367659159" causeLocRef="22">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1160252530" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="21" srcRngStartPos="9" srcRngEndPos="49" srcRngStartln="21" srcRngEndLn="22" desc="createXMLDocumentAndStoreData(Document document, String sUserId, String sUserName, String sDataType," ElType=".C" rngLn="21">
          <Props>
            <Prop key="Tracked variables" val="sData" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sData" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="579819957" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="25" srcRngStartPos="8" srcRngEndPos="47" srcRngStartln="25" srcRngEndLn="25" desc="String userAttrName = &quot;User&quot; + sUserId;" ElType="." rngLn="25" />
        <ElDesc lineHash="1823710720" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="26" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="26" srcRngEndLn="26" desc="Element user = document.createElement(userAttrName);" ElType="." rngLn="26" />
        <ElDesc lineHash="-114337401" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="27" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="27" srcRngEndLn="27" desc="user.setAttribute(&quot;name&quot;, sUserName);" ElType="." rngLn="27" />
        <ElDesc lineHash="-1128345384" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="28" srcRngStartPos="8" srcRngEndPos="61" srcRngStartln="28" srcRngEndLn="28" desc="Element userData = document.createElement(sDataType);" ElType="." rngLn="28" />
        <ElDesc lineHash="917005069" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="29" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="29" srcRngEndLn="29" desc="userData.setNodeValue(sData);" ElType=".P" rngLn="29">
          <Props>
            <Prop key="Tracked variables" val="sData" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sData" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities" ln="21" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="lavanya" rule="CWE.89.UPS" lnHash="203786084" pkg="examples.flowanalysis.np" rule.header="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="219bb0c7-f78d-33af-af9a-3901efddc7b2" locEndPos="48" prio="Not Defined" locEndLn="21" goals="0," locStartln="21" sev="1" locRef="23" tool="jtest" lineHash="203786084" unbViolId="46841ea8-51b1-394a-833e-55fd08de46b7" risk="Undefined" locType="sr" hash="635578452" />
    <FlowViol msg="The &quot;getString()&quot; method returns tainted data that should be validated before use" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="45" auth="lavanya" FirstElSrcRngEndLn="24" rule="CWE.352.VPPD" FirstElSrcRngStartPos="16" lnHash="77646926" ruleSCSCMsg="Point where tainted data is accessed" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="24" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="684024816" lang="java" violId="36fdd649-6d7c-34db-9a5e-c4e592878ee9" locEndPos="45" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="2" locRef="23" tool="jtest" lineHash="77646926" unbViolId="ff4f60ee-09f4-318a-8075-98e46002cfe8" risk="Undefined" locType="sr" hash="635578452" causeLocRef="23">
      <Props />
      <ElDescList>
        <ElDesc lineHash="77646926" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="24" srcRngStartPos="16" srcRngEndPos="45" srcRngStartln="24" srcRngEndLn="24" desc="obj.oid = rs.getString(&quot;oid&quot;)" ElType="CP" rngLn="24">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getString()&quot; method returns tainted data that should be validated before use" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="45" auth="lavanya" FirstElSrcRngEndLn="24" rule="CWE.79.VPPD" FirstElSrcRngStartPos="16" lnHash="77646926" ruleSCSCMsg="Point where tainted data is accessed" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="24" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="1630622372" lang="java" violId="c22c1ae6-f09f-3a76-b245-3109051c0475" locEndPos="45" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="2" locRef="23" tool="jtest" lineHash="77646926" unbViolId="d79068cc-390f-355d-a4d9-e32a89b8e440" risk="Undefined" locType="sr" hash="635578452" causeLocRef="23">
      <Props />
      <ElDescList>
        <ElDesc lineHash="77646926" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="24" srcRngStartPos="16" srcRngEndPos="45" srcRngStartln="24" srcRngEndLn="24" desc="obj.oid = rs.getString(&quot;oid&quot;)" ElType="CP" rngLn="24">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;FileReader&quot; is dangerous and should be validated" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="65" auth="lavanya" FirstElSrcRngEndLn="24" rule="CWE.352.EACM" FirstElSrcRngStartPos="40" lnHash="-1664407388" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="24" locStartPos="40" analyzer="com.parasoft.jtest.flowanalyzer" id="-40607840" lang="java" violId="20aa4fd5-c0a3-3620-984c-d6c1c7336bc8" locEndPos="65" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="2" locRef="24" tool="jtest" lineHash="-1664407388" unbViolId="4bed822d-af4f-35c1-8ea1-3e0c64a29273" risk="Undefined" locType="sr" hash="1118499003" causeLocRef="24">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="1118499003" locRef="24" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" ln="24" srcRngStartPos="40" srcRngEndPos="65" srcRngStartln="24" srcRngEndLn="24" desc="new FileReader(sFileName)" ElType="CP" rngLn="24">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;FileReader&quot; is dangerous and should be validated" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="65" auth="lavanya" FirstElSrcRngEndLn="24" rule="CWE.79.EACM" FirstElSrcRngStartPos="40" lnHash="-1664407388" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="24" locStartPos="40" analyzer="com.parasoft.jtest.flowanalyzer" id="-1270845580" lang="java" violId="25279668-a30e-3430-beaf-a4ce100597e4" locEndPos="65" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="2" locRef="24" tool="jtest" lineHash="-1664407388" unbViolId="ff175224-0554-3b37-be0e-254e06ff306a" risk="Undefined" locType="sr" hash="1118499003" causeLocRef="24">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="1118499003" locRef="24" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" ln="24" srcRngStartPos="40" srcRngEndPos="65" srcRngStartln="24" srcRngEndLn="24" desc="new FileReader(sFileName)" ElType="CP" rngLn="24">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-747252483" pkg="examples.flowanalysis.np" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="13711147-22f2-3e9d-b7a5-d337d17989d7" locEndPos="68" prio="Not Defined" locEndLn="27" goals="0," locStartln="27" sev="3" locRef="24" tool="jtest" lineHash="-747252483" unbViolId="3b8d93df-59f3-3e71-a5bf-a64a279b4dec" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="lavanya" rule="CWE.200.PEO" lnHash="-747252483" pkg="examples.flowanalysis.np" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ce611ba1-eaea-3a39-b808-9f90fa6e1ebd" locEndPos="30" prio="Not Defined" locEndLn="27" goals="0," locStartln="27" sev="1" locRef="24" tool="jtest" lineHash="-747252483" unbViolId="40d8d1cf-3a6f-3d13-8fb1-47793dced125" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-1248760618" pkg="examples.flowanalysis.np" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4b8b42aa-05ba-36b0-94ed-3f38848c6c63" locEndPos="77" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="24" tool="jtest" lineHash="-1248760618" unbViolId="c8e8da5a-19a2-357a-90ef-122dc53e0ccd" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="lavanya" rule="CWE.200.PEO" lnHash="-1248760618" pkg="examples.flowanalysis.np" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c68e32a2-d65f-384b-a8bd-50227ad04a4f" locEndPos="30" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="1" locRef="24" tool="jtest" lineHash="-1248760618" unbViolId="1072d4b7-3648-35be-bfcd-837c2127522e" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Accessing the System property &quot;Language&quot;" ln="36" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="lavanya" rule="CWE.20.SYSP" lnHash="-1242344657" pkg="examples.flowanalysis.np" rule.header="Do not access or set System properties" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="41b76229-4d28-3f04-bcb1-659f5dca0eea" locEndPos="45" prio="Not Defined" locEndLn="36" goals="0," locStartln="36" sev="2" locRef="24" tool="jtest" lineHash="-1242344657" unbViolId="ab5b97c4-1461-34e0-9e4c-bb3fe346a0d6" risk="Undefined" locType="sr" hash="1118499003" />
    <FlowViol msg="The &quot;getProperty()&quot; method returns tainted data that should be validated before use" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="58" auth="lavanya" FirstElSrcRngEndLn="36" rule="CWE.352.VPPD" FirstElSrcRngStartPos="8" lnHash="-937459152" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="36" locStartPos="26" analyzer="com.parasoft.jtest.flowanalyzer" id="-20105875" lang="java" violId="470077c4-00ce-331c-9008-5bfe940a76e4" locEndPos="49" urgent="true" prio="Not Defined" locEndLn="37" goals="1," locStartln="37" sev="2" locRef="24" tool="jtest" lineHash="-937459152" unbViolId="92c244fc-e841-3775-97f5-26acbf8e6724" risk="Undefined" locType="sr" hash="1118499003" causeLocRef="24">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1242344657" locType="sr" srcRnghash="1118499003" locRef="24" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" ln="36" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="36" srcRngEndLn="36" desc="String sLanguage = System.getProperty(&quot;Language&quot;);" ElType=".C" rngLn="36">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-937459152" locType="sr" srcRnghash="1118499003" locRef="24" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" ln="37" srcRngStartPos="26" srcRngEndPos="49" srcRngStartln="37" srcRngEndLn="37" desc="sLanguage.toLowerCase()" ElType=".P" rngLn="37">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getProperty()&quot; method returns tainted data that should be validated before use" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="58" auth="lavanya" FirstElSrcRngEndLn="36" rule="CWE.79.VPPD" FirstElSrcRngStartPos="8" lnHash="-937459152" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="36" locStartPos="26" analyzer="com.parasoft.jtest.flowanalyzer" id="-1221000135" lang="java" violId="69c176f1-92c3-31dc-bfda-ccbfc8e120fc" locEndPos="49" urgent="true" prio="Not Defined" locEndLn="37" goals="1," locStartln="37" sev="2" locRef="24" tool="jtest" lineHash="-937459152" unbViolId="4569ebfb-9611-3e8d-83ca-bf16ccc35461" risk="Undefined" locType="sr" hash="1118499003" causeLocRef="24">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1242344657" locType="sr" srcRnghash="1118499003" locRef="24" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" ln="36" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="36" srcRngEndLn="36" desc="String sLanguage = System.getProperty(&quot;Language&quot;);" ElType=".C" rngLn="36">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-937459152" locType="sr" srcRnghash="1118499003" locRef="24" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" ln="37" srcRngStartPos="26" srcRngEndPos="49" srcRngStartln="37" srcRngEndLn="37" desc="sLanguage.toLowerCase()" ElType=".P" rngLn="37">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-568163166" pkg="examples.flowanalysis.np" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0b51b946-58c9-313a-b204-5b933fb509c1" locEndPos="78" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="25" tool="jtest" lineHash="-568163166" unbViolId="4ec33bf9-9371-3152-ac95-a19deecfe25d" risk="Undefined" locType="sr" hash="796982299" />
    <FlowViol msg="&quot;oid&quot; may possibly be null" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="22" auth="lavanya" FirstElSrcRngEndLn="13" rule="CWE.476.NP" FirstElSrcRngStartPos="4" lnHash="-568163166" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="13" locStartPos="27" analyzer="com.parasoft.jtest.flowanalyzer" id="1114207609" lang="java" violId="175fa5e9-743a-3fa2-a414-46bb0e0bda3e" locEndPos="77" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="1" locRef="25" tool="jtest" lineHash="-568163166" unbViolId="c4539814-bd61-3fa0-84d7-5ee48973b347" risk="Undefined" locType="sr" hash="796982299" causeLocRef="23">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-864216146" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="16" srcRngStartPos="29" srcRngEndPos="49" srcRngStartln="16" srcRngEndLn="16" desc="new DatabaseObject()" ElType="!" rngLn="16">
          <ElDescList>
            <ElDesc lineHash="1402874458" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="13" srcRngStartPos="4" srcRngEndPos="22" srcRngStartln="13" srcRngEndLn="13" desc="Object oid = null;" ElType=".C" rngLn="13">
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: this.oid" kind="comment" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Anns>
            <Ann msg="Null value carrier: new DatabaseObject().oid" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-864216146" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="16" srcRngStartPos="8" srcRngEndPos="50" srcRngStartln="16" srcRngEndLn="16" desc="DatabaseObject obj = new DatabaseObject();" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Null value carrier: obj.oid" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1951810480" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="17" srcRngStartPos="8" srcRngEndPos="76" srcRngStartln="17" srcRngEndLn="17" desc="String sQuery = &quot;SELECT * FROM &quot; + table + &quot; WHERE id='&quot; + id + &quot;'&quot;;" ElType="." rngLn="17" />
        <ElDesc lineHash="-271783734" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="18" srcRngStartPos="8" srcRngEndPos="30" srcRngStartln="18" srcRngEndLn="18" desc="Statement stmt = null;" ElType="." rngLn="18" />
        <ElDesc lineHash="920994605" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="19" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="19" srcRngEndLn="19" desc="ResultSet rs = null;" ElType="." rngLn="19" />
        <ElDesc lineHash="203786084" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="21" srcRngStartPos="12" srcRngEndPos="50" srcRngStartln="21" srcRngEndLn="21" desc="stmt = sqlConnection.createStatement()" ElType="!E" rngLn="21" thrownTypes="SQLException" throwingMethod="Connection.createStatement">
          <Anns>
            <Ann msg="Connection.createStatement() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1213180686" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="26" srcRngStartPos="10" srcRngEndPos="9" srcRngStartln="26" srcRngEndLn="28" desc="catch (SQLException sqle) {" ElType="." rngLn="26" />
        <ElDesc lineHash="1132095587" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="29" srcRngStartPos="12" srcRngEndPos="22" srcRngStartln="29" srcRngEndLn="29" desc="close(rs);" ElType="." rngLn="29">
          <ElDescList>
            <ElDesc lineHash="-1102065577" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="45" srcRngStartPos="8" srcRngEndPos="25" srcRngStartln="45" srcRngEndLn="45" desc="if (rs == null) {" ElType="." rngLn="45">
              <Anns>
                <Ann msg="Condition evaluation: (rs == null) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1196601077" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="46" srcRngStartPos="12" srcRngEndPos="19" srcRngStartln="46" srcRngEndLn="46" desc="return;" ElType="." rngLn="46" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1348767786" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="30" srcRngStartPos="12" srcRngEndPos="24" srcRngStartln="30" srcRngEndLn="30" desc="close(stmt);" ElType="." rngLn="30">
          <ElDescList>
            <ElDesc lineHash="1987037616" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="55" srcRngStartPos="8" srcRngEndPos="27" srcRngStartln="55" srcRngEndLn="55" desc="if (stmt == null) {" ElType="." rngLn="55">
              <Anns>
                <Ann msg="Condition evaluation: (stmt == null) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1196601077" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="56" srcRngStartPos="12" srcRngEndPos="19" srcRngStartln="56" srcRngEndLn="56" desc="return;" ElType="." rngLn="56" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1945770374" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="32" srcRngStartPos="8" srcRngEndPos="43" srcRngStartln="32" srcRngEndLn="32" desc="MessageFormatter.printMessage(obj);" ElType="!" rngLn="32">
          <ElDescList>
            <ElDesc lineHash="2011414693" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ln="9" srcRngStartPos="21" srcRngEndPos="39" srcRngStartln="9" srcRngEndLn="9" desc="obj.getClassName()" ElType="." rngLn="9">
              <ElDescList>
                <ElDesc lineHash="-1919500060" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="37" srcRngStartPos="8" srcRngEndPos="41" srcRngStartln="37" srcRngEndLn="37" desc="return this.getClass().getName();" ElType="." rngLn="37" />
              </ElDescList>
              <Anns>
                <Ann msg="Null value carrier: this.oid" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2011414693" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ln="9" srcRngStartPos="41" srcRngEndPos="53" srcRngStartln="9" srcRngEndLn="9" desc="obj.getOID()" ElType="!" rngLn="9">
              <ElDescList>
                <ElDesc lineHash="1890282657" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="41" srcRngStartPos="8" srcRngEndPos="19" srcRngStartln="41" srcRngEndLn="41" desc="return oid;" ElType="!" rngLn="41">
                  <Anns>
                    <Ann msg="Null value carrier: this.oid -> &lt;returned value of getOID()>" kind="comment" />
                  </Anns>
                </ElDesc>
              </ElDescList>
              <Anns>
                <Ann msg="Null value carrier: &lt;returned value of getOID()> -> obj.getOID()" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2011414693" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ln="9" srcRngStartPos="8" srcRngEndPos="55" srcRngStartln="9" srcRngEndLn="9" desc="printMessage(obj.getClassName(), obj.getOID());" ElType="!" rngLn="9">
              <ElDescList>
                <ElDesc lineHash="-1518746264" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ln="12" srcRngStartPos="23" srcRngEndPos="66" srcRngStartln="12" srcRngEndLn="12" desc="printMessage(Object className, Object oid)" ElType="!" rngLn="12">
                  <Anns>
                    <Ann msg="Null value carrier: obj.getOID() -> oid" kind="comment" />
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="-568163166" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ln="13" srcRngStartPos="27" srcRngEndPos="77" srcRngStartln="13" srcRngEndLn="13" desc="&quot;[&quot; + className.toString() + &quot;] &quot; + oid.toString()" ElType=".P" rngLn="13">
                  <Anns>
                    <Ann msg="Null value carrier: oid" kind="comment" />
                    <Ann msg="NullPointerException point" kind="point" />
                  </Anns>
                </ElDesc>
              </ElDescList>
              <Anns>
                <Ann msg="Null value carrier: obj.getOID()" kind="comment" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;strKey&quot; may possibly be null" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="29" auth="lavanya" FirstElSrcRngEndLn="14" rule="CWE.476.NP" FirstElSrcRngStartPos="8" lnHash="-1504762512" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="14" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-1481639968" lang="java" violId="1463422c-eb9d-3940-8c2c-732f7ef868d0" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="18" goals="1," locStartln="18" sev="1" locRef="26" tool="jtest" lineHash="-1504762512" unbViolId="21f16589-efcb-320d-824e-58b2de6e4d00" risk="Undefined" locType="sr" hash="1067996598" causeLocRef="26">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1935852018" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" ln="14" srcRngStartPos="8" srcRngEndPos="29" srcRngStartln="14" srcRngEndLn="14" desc="String strKey = null;" ElType=".C" rngLn="14">
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: strKey" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1183172741" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" ln="15" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="15" srcRngEndLn="15" desc="if (key instanceof String) {" ElType="." rngLn="15">
          <Anns>
            <Ann msg="Condition evaluation: key instanceof java.lang.String (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1504762512" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" ln="18" srcRngStartPos="8" srcRngEndPos="32" srcRngStartln="18" srcRngEndLn="18" desc="dict.put(strKey, value);" ElType=".P" rngLn="18">
          <Anns>
            <Ann msg="Null value carrier: strKey" kind="comment" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;FileReader&quot; is dangerous and should be validated" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="65" auth="lavanya" FirstElSrcRngEndLn="15" rule="CWE.352.EACM" FirstElSrcRngStartPos="40" lnHash="-1664407388" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="15" locStartPos="40" analyzer="com.parasoft.jtest.flowanalyzer" id="-40607840" lang="java" violId="025dce0c-c87d-3d48-a135-2469a062b382" locEndPos="65" urgent="true" prio="Not Defined" locEndLn="15" goals="1," locStartln="15" sev="2" locRef="27" tool="jtest" lineHash="-1664407388" unbViolId="8e932921-a6d7-3cc4-8ad3-fb82069e613f" risk="Undefined" locType="sr" hash="-51902665" causeLocRef="27">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="15" srcRngStartPos="40" srcRngEndPos="65" srcRngStartln="15" srcRngEndLn="15" desc="new FileReader(sFileName)" ElType="CP" rngLn="15">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;FileReader&quot; is dangerous and should be validated" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="65" auth="lavanya" FirstElSrcRngEndLn="15" rule="CWE.79.EACM" FirstElSrcRngStartPos="40" lnHash="-1664407388" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="15" locStartPos="40" analyzer="com.parasoft.jtest.flowanalyzer" id="-1270845580" lang="java" violId="db0de576-f4d1-31e0-b05a-6a409a7ca078" locEndPos="65" urgent="true" prio="Not Defined" locEndLn="15" goals="1," locStartln="15" sev="2" locRef="27" tool="jtest" lineHash="-1664407388" unbViolId="1a75ab13-dd8f-3a36-8e3c-7e9aa1335c1e" risk="Undefined" locType="sr" hash="-51902665" causeLocRef="27">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="15" srcRngStartPos="40" srcRngEndPos="65" srcRngStartln="15" srcRngEndLn="15" desc="new FileReader(sFileName)" ElType="CP" rngLn="15">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-747252483" pkg="examples.flowanalysis.np" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6273ebdf-911b-365f-9954-109e05565e05" locEndPos="68" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="27" tool="jtest" lineHash="-747252483" unbViolId="f7db4c78-9ea5-36ad-8a99-c168569fc24b" risk="Undefined" locType="sr" hash="-51902665" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="lavanya" rule="CWE.200.PEO" lnHash="-747252483" pkg="examples.flowanalysis.np" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="af2b45d4-2505-3478-88af-342e6509974f" locEndPos="30" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="1" locRef="27" tool="jtest" lineHash="-747252483" unbViolId="364d7ef2-b590-371f-a3dc-ccd34f0cd0d1" risk="Undefined" locType="sr" hash="-51902665" />
    <FlowViol msg="&quot;sFirstLine&quot; may possibly be null" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="33" auth="lavanya" FirstElSrcRngEndLn="12" rule="CWE.476.NP" FirstElSrcRngStartPos="8" lnHash="-1543564921" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="12" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-828617265" lang="java" violId="c2884329-904f-3fab-b66d-75a8ba87c2e5" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="22" goals="1," locStartln="22" sev="1" locRef="27" tool="jtest" lineHash="-1543564921" unbViolId="ea9f3c5a-c0ce-3d90-932c-91f9d73c86a1" risk="Undefined" locType="sr" hash="-51902665" causeLocRef="27">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-989328207" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="12" srcRngStartPos="8" srcRngEndPos="33" srcRngStartln="12" srcRngEndLn="12" desc="String sFirstLine = null;" ElType=".C" rngLn="12">
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: sFirstLine" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="191709394" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="13" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="13" srcRngEndLn="13" desc="BufferedReader reader = null;" ElType="." rngLn="13" />
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="15" srcRngStartPos="40" srcRngEndPos="65" srcRngStartln="15" srcRngEndLn="15" desc="new FileReader(sFileName)" ElType="!E" rngLn="15" thrownTypes="FileNotFoundException" throwingMethod="FileReader.FileReader">
          <Anns>
            <Ann msg="FileReader.FileReader() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="17" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="17" srcRngEndLn="17" desc="catch (Exception e)" ElType="." rngLn="17" />
        <ElDesc lineHash="-747252483" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="18" srcRngStartPos="12" srcRngEndPos="69" srcRngStartln="18" srcRngEndLn="18" desc="System.out.println(&quot;Exception occured. &quot; + e.toString());" ElType="." rngLn="18" />
        <ElDesc lineHash="853738085" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="20" srcRngStartPos="12" srcRngEndPos="26" srcRngStartln="20" srcRngEndLn="20" desc="close(reader);" ElType="." rngLn="20">
          <ElDescList>
            <ElDesc lineHash="-2039937235" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="27" srcRngStartPos="12" srcRngEndPos="27" srcRngStartln="27" srcRngEndLn="27" desc="reader.close();" ElType="." rngLn="27" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1543564921" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="22" srcRngStartPos="15" srcRngEndPos="34" srcRngStartln="22" srcRngEndLn="22" desc="sFirstLine.length()" ElType=".P" rngLn="22">
          <Anns>
            <Ann msg="Null value carrier: sFirstLine" kind="comment" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;reader&quot; may possibly be null" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="lavanya" FirstElSrcRngEndLn="13" rule="CWE.476.NP" FirstElSrcRngStartPos="8" lnHash="-2039937235" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="13" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="989822108" lang="java" violId="393d11d8-cd35-3406-a6cc-db0a93d471cd" locEndPos="27" urgent="true" prio="Not Defined" locEndLn="27" goals="1," locStartln="27" sev="1" locRef="27" tool="jtest" lineHash="-2039937235" unbViolId="6a989918-6564-321e-8dfe-34ace5cc0573" risk="Undefined" locType="sr" hash="-51902665" causeLocRef="27">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-989328207" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="12" srcRngStartPos="8" srcRngEndPos="33" srcRngStartln="12" srcRngEndLn="12" desc="String sFirstLine = null;" ElType="." rngLn="12" />
        <ElDesc lineHash="191709394" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="13" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="13" srcRngEndLn="13" desc="BufferedReader reader = null;" ElType=".C" rngLn="13">
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: reader" kind="comment" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="15" srcRngStartPos="40" srcRngEndPos="65" srcRngStartln="15" srcRngEndLn="15" desc="new FileReader(sFileName)" ElType="!E" rngLn="15" thrownTypes="FileNotFoundException" throwingMethod="FileReader.FileReader">
          <Anns>
            <Ann msg="FileReader.FileReader() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="17" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="17" srcRngEndLn="17" desc="catch (Exception e)" ElType="." rngLn="17" />
        <ElDesc lineHash="-747252483" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="18" srcRngStartPos="12" srcRngEndPos="69" srcRngStartln="18" srcRngEndLn="18" desc="System.out.println(&quot;Exception occured. &quot; + e.toString());" ElType="." rngLn="18" />
        <ElDesc lineHash="853738085" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="20" srcRngStartPos="12" srcRngEndPos="26" srcRngStartln="20" srcRngEndLn="20" desc="close(reader);" ElType="!" rngLn="20">
          <ElDescList>
            <ElDesc lineHash="-2039937235" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="27" srcRngStartPos="12" srcRngEndPos="27" srcRngStartln="27" srcRngEndLn="27" desc="reader.close();" ElType=".P" rngLn="27">
              <Anns>
                <Ann msg="Null value carrier: reader" kind="comment" />
                <Ann msg="NullPointerException point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Print method 'printStackTrace()' is not allowed in a &quot;catch&quot; block" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" auth="lavanya" rule="CWE.200.PEO" lnHash="497810129" pkg="examples.metrics" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="44" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="16bf6e04-4124-39dd-9633-145584f3e240" locEndPos="59" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="1" locRef="36" tool="jtest" lineHash="497810129" unbViolId="02ad4f62-78f6-32a5-bf10-e536f1c4dfd2" risk="Undefined" locType="sr" hash="-1994237948" />
    <StdViol msg="The 'printStackTrace()' method of a &quot;Throwable&quot; object is called here" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" auth="lavanya" rule="CWE.200.ACPST" lnHash="497810129" pkg="examples.metrics" rule.header="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" locStartPos="44" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="02ad87f1-8118-34af-8223-3add8ebb5c72" locEndPos="59" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="3" locRef="36" tool="jtest" lineHash="497810129" unbViolId="d68d0c01-f9f1-371f-8754-6fe9568d236c" risk="Undefined" locType="sr" hash="-1994237948" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/mock/FileExample.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1700658549" pkg="examples.mock" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bb92493e-5472-3e9f-b683-3a89800d07a9" locEndPos="53" prio="Not Defined" locEndLn="31" goals="0," locStartln="31" sev="3" locRef="38" tool="jtest" lineHash="1700658549" unbViolId="38c18a3e-93d8-3608-b421-8bc0ab15c3e8" risk="Undefined" locType="sr" hash="1641622182" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-643698138" pkg="examples.mock" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="55d28fc0-3f3a-3e89-8754-28c63a842921" locEndPos="52" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="39" tool="jtest" lineHash="-643698138" unbViolId="db58a5c1-550d-39f3-b38f-da1f138db94c" risk="Undefined" locType="sr" hash="1888280347" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1883900656" pkg="examples.mock" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ea2cd48e-7914-3f2b-920c-0b4ecdf7eb6f" locEndPos="44" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="3" locRef="39" tool="jtest" lineHash="1883900656" unbViolId="f37d30c8-5ff9-39a7-82f8-d7bcb6c229c0" risk="Undefined" locType="sr" hash="1888280347" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="lavanya" rule="CWE.200.SIO" lnHash="86950258" pkg="examples.mock" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4360e60f-11c7-372a-b9d7-3c9623b8378f" locEndPos="44" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="39" tool="jtest" lineHash="86950258" unbViolId="8c2ea54d-99e2-3e82-8be9-ec03fdaf38cd" risk="Undefined" locType="sr" hash="1888280347" />
    <StdViol msg="Accessing the System property &quot;demo-bank-maintanance&quot;" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" auth="lavanya" rule="CWE.20.SYSP" lnHash="-1804607908" pkg="examples.nbank" rule.header="Do not access or set System properties" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="242ad3fa-8247-3c69-a569-0fb61598ea7d" locEndPos="41" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="2" locRef="45" tool="jtest" lineHash="-1804607908" unbViolId="51a73ade-858e-3e3d-9669-c77d59f57840" risk="Undefined" locType="sr" hash="2120971007" />
    <FlowViol msg="The &quot;getProperty()&quot; method returns tainted data that should be validated before use" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="60" auth="lavanya" FirstElSrcRngEndLn="8" rule="CWE.352.VPPD" FirstElSrcRngStartPos="8" lnHash="1408222922" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.nbank" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="8" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1484491711" lang="java" violId="ebdf5d54-0a8a-3313-93a7-5ec716c1595f" locEndPos="44" urgent="true" prio="Not Defined" locEndLn="9" goals="1," locStartln="9" sev="2" locRef="45" tool="jtest" lineHash="1408222922" unbViolId="11017510-efba-3b00-ada3-5d6c5fd41757" risk="Undefined" locType="sr" hash="2120971007" causeLocRef="45">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1804607908" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ln="8" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="8" srcRngEndLn="8" desc="String value = System.getProperty(MAINTENANCE_MODE);" ElType=".C" rngLn="8">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1408222922" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ln="9" srcRngStartPos="12" srcRngEndPos="44" srcRngStartln="9" srcRngEndLn="9" desc="(value == null) || (value.trim()" ElType=".P" rngLn="9">
          <Anns>
            <Ann msg="Condition evaluation: (value == null) (assuming false)" kind="condEval" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getProperty()&quot; method returns tainted data that should be validated before use" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="60" auth="lavanya" FirstElSrcRngEndLn="8" rule="CWE.79.VPPD" FirstElSrcRngStartPos="8" lnHash="1408222922" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.nbank" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="8" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-294632171" lang="java" violId="4112509e-341e-3bf0-a2dc-717c61bc739b" locEndPos="44" urgent="true" prio="Not Defined" locEndLn="9" goals="1," locStartln="9" sev="2" locRef="45" tool="jtest" lineHash="1408222922" unbViolId="05a8914a-9a90-3087-b418-c9d1b077adbd" risk="Undefined" locType="sr" hash="2120971007" causeLocRef="45">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1804607908" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ln="8" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="8" srcRngEndLn="8" desc="String value = System.getProperty(MAINTENANCE_MODE);" ElType=".C" rngLn="8">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1408222922" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ln="9" srcRngStartPos="12" srcRngEndPos="44" srcRngStartln="9" srcRngEndLn="9" desc="(value == null) || (value.trim()" ElType=".P" rngLn="9">
          <Anns>
            <Ann msg="Condition evaluation: (value == null) (assuming false)" kind="condEval" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Setting the System property &quot;demo-bank-maintanance&quot;" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" auth="lavanya" rule="CWE.20.SYSP" lnHash="-364811098" pkg="examples.nbank" rule.header="Do not access or set System properties" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2dae1a81-8fba-3088-b77c-7b063542f75b" locEndPos="26" prio="Not Defined" locEndLn="16" goals="0," locStartln="16" sev="2" locRef="45" tool="jtest" lineHash="-364811098" unbViolId="d5d28cc7-55ac-398c-870b-801c42621b60" risk="Undefined" locType="sr" hash="2120971007" />
    <StdViol msg="Setting the System property &quot;demo-bank-maintanance&quot;" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" auth="lavanya" rule="CWE.20.SYSP" lnHash="436478051" pkg="examples.nbank" rule.header="Do not access or set System properties" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="47f31b92-33a0-3ea0-8e4f-be9ef4709ba4" locEndPos="26" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="2" locRef="45" tool="jtest" lineHash="436478051" unbViolId="bfe58790-d661-343a-818c-60bf9b4d7459" risk="Undefined" locType="sr" hash="2120971007" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="89" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-1740946050" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="264c7091-4e3d-3e82-b9f1-7c0a3b032a13" locEndPos="61" prio="Not Defined" locEndLn="89" goals="0," locStartln="89" sev="3" locRef="47" tool="jtest" lineHash="-1740946050" unbViolId="1aef5d21-054d-3cf0-ae69-af67e68a40e8" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="90" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1329806731" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="adc8bec2-4ec3-337f-b794-01b117053858" locEndPos="60" prio="Not Defined" locEndLn="90" goals="0," locStartln="90" sev="3" locRef="47" tool="jtest" lineHash="1329806731" unbViolId="5dae8a45-f74b-35ee-a93f-682d0150358a" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1586176677" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d3c4072d-7f97-3264-8d0c-056b8d643484" locEndPos="99" prio="Not Defined" locEndLn="91" goals="0," locStartln="91" sev="3" locRef="47" tool="jtest" lineHash="1586176677" unbViolId="b6194670-6705-3a2f-95b1-0413c2dcc8c9" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="92" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-1687056554" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8108206b-42f6-35a3-b6a2-ad9cc1eb438b" locEndPos="66" prio="Not Defined" locEndLn="92" goals="0," locStartln="92" sev="3" locRef="47" tool="jtest" lineHash="-1687056554" unbViolId="f0cf0b3a-d504-3a62-acad-ba2463ba4938" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="API call 'Class.forName()' has potential to bypass security" ln="74" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CWE.20.APIBS" lnHash="-439487439" pkg="examples.nbank" rule.header="Inspect usage of standard API calls that bypass security" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eee28e37-b3eb-3dce-a0de-fe856d15557e" locEndPos="25" urgent="true" prio="Not Defined" locEndLn="74" goals="1," locStartln="74" sev="3" locRef="48" tool="jtest" lineHash="-439487439" unbViolId="195821b9-a724-335a-b84f-7cf666379a7a" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="This call to 'getConnection()' may be dangerous because it uses a hard-coded password" ln="75" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CWE.287.HCCS" lnHash="1774293749" pkg="examples.nbank" rule.header="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" locStartPos="39" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5ca11258-0ffb-3302-8470-8baf97230ab4" locEndPos="52" urgent="true" prio="Not Defined" locEndLn="75" goals="1," locStartln="75" sev="1" locRef="48" tool="jtest" lineHash="1774293749" unbViolId="d2757e88-ad00-3f04-8157-862ebb649e65" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="This call to 'getConnection()' may be dangerous because it uses a hard-coded password" ln="75" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CWE.798.HCCS" lnHash="1774293749" pkg="examples.nbank" rule.header="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" locStartPos="39" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="83a48b20-c3de-35ec-b623-7a6cf951368d" locEndPos="52" urgent="true" prio="Not Defined" locEndLn="75" goals="1," locStartln="75" sev="1" locRef="48" tool="jtest" lineHash="1774293749" unbViolId="c33f4bf6-ce9d-3c1f-a50d-d2806ca9af47" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="API call 'DriverManager.getConnection()' has potential to bypass security" ln="75" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CWE.20.APIBS" lnHash="1774293749" pkg="examples.nbank" rule.header="Inspect usage of standard API calls that bypass security" locStartPos="39" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="95760dd0-c5fa-362c-9a6d-7aeb7dee64b9" locEndPos="52" urgent="true" prio="Not Defined" locEndLn="75" goals="1," locStartln="75" sev="3" locRef="48" tool="jtest" lineHash="1774293749" unbViolId="c19e7383-f3a0-3caf-af2c-da96129dea7b" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="77" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CWE.200.SIO" lnHash="-647429399" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="58ec073d-b250-351a-b3e4-c000236426a1" locEndPos="55" urgent="true" prio="Not Defined" locEndLn="77" goals="1," locStartln="77" sev="3" locRef="48" tool="jtest" lineHash="-647429399" unbViolId="dfda708a-d929-316c-a7e5-ae3280e59a04" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="80" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CWE.200.SIO" lnHash="768127156" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f7a2bad4-5943-38d2-ad51-905ccf16cbea" locEndPos="79" urgent="true" prio="Not Defined" locEndLn="80" goals="1," locStartln="80" sev="3" locRef="48" tool="jtest" lineHash="768127156" unbViolId="eb4df997-e1d9-3fbb-b0e5-5829736353e9" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="80" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CWE.200.PEO" lnHash="768127156" pkg="examples.nbank" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0239bde6-938f-3ae4-a823-07f8448466ca" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="80" goals="1," locStartln="80" sev="1" locRef="48" tool="jtest" lineHash="768127156" unbViolId="760ce70e-4316-3dc0-9cdf-deaeb4e9a8c2" risk="Undefined" locType="sr" hash="2046383933" />
    <FlowViol msg="The &quot;getString()&quot; method returns tainted data that should be validated before use" ln="86" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="42" auth="Mark Wilson" FirstElSrcRngEndLn="86" rule="CWE.352.VPPD" FirstElSrcRngStartPos="12" lnHash="612379775" ruleSCSCMsg="Point where tainted data is accessed" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="86" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="684024756" lang="java" violId="4ed6ea2e-4c75-3a4a-addf-7c7d43ceda4c" locEndPos="42" urgent="true" prio="Not Defined" locEndLn="86" goals="1," locStartln="86" sev="2" locRef="48" tool="jtest" lineHash="612379775" unbViolId="778d76f9-43f4-394c-8344-fd68590cb328" risk="Undefined" locType="sr" hash="2046383933" causeLocRef="48">
      <Props />
      <ElDescList>
        <ElDesc lineHash="612379775" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" ln="86" srcRngStartPos="12" srcRngEndPos="42" srcRngStartln="86" srcRngEndLn="86" desc="_name = resultSet.getString(0)" ElType="CP" rngLn="86">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getString()&quot; method returns tainted data that should be validated before use" ln="86" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="42" auth="Mark Wilson" FirstElSrcRngEndLn="86" rule="CWE.79.VPPD" FirstElSrcRngStartPos="12" lnHash="612379775" ruleSCSCMsg="Point where tainted data is accessed" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="86" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1630622432" lang="java" violId="2451c933-79fe-3691-a52a-e6f3e2e7328d" locEndPos="42" urgent="true" prio="Not Defined" locEndLn="86" goals="1," locStartln="86" sev="2" locRef="48" tool="jtest" lineHash="612379775" unbViolId="058acf0d-10d5-338b-83db-9778d2677a0e" risk="Undefined" locType="sr" hash="2046383933" causeLocRef="48">
      <Props />
      <ElDescList>
        <ElDesc lineHash="612379775" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" ln="86" srcRngStartPos="12" srcRngEndPos="42" srcRngStartln="86" srcRngEndLn="86" desc="_name = resultSet.getString(0)" ElType="CP" rngLn="86">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getString()&quot; method returns tainted data that should be validated before use" ln="87" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="41" auth="Mark Wilson" FirstElSrcRngEndLn="87" rule="CWE.352.VPPD" FirstElSrcRngStartPos="12" lnHash="-582428250" ruleSCSCMsg="Point where tainted data is accessed" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="87" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="684024752" lang="java" violId="9ebd844d-d9e0-3d46-8ced-6b59baf37cd4" locEndPos="41" urgent="true" prio="Not Defined" locEndLn="87" goals="1," locStartln="87" sev="2" locRef="48" tool="jtest" lineHash="-582428250" unbViolId="3aa8ad96-67ed-3960-a9ed-ebe63f2124d1" risk="Undefined" locType="sr" hash="2046383933" causeLocRef="48">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-582428250" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" ln="87" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="87" srcRngEndLn="87" desc="_ssn = resultSet.getString(2)" ElType="CP" rngLn="87">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getString()&quot; method returns tainted data that should be validated before use" ln="87" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="41" auth="Mark Wilson" FirstElSrcRngEndLn="87" rule="CWE.79.VPPD" FirstElSrcRngStartPos="12" lnHash="-582428250" ruleSCSCMsg="Point where tainted data is accessed" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="87" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1630622436" lang="java" violId="14d0d9c0-1d5a-3a6b-bc52-c4c89bf50bb3" locEndPos="41" urgent="true" prio="Not Defined" locEndLn="87" goals="1," locStartln="87" sev="2" locRef="48" tool="jtest" lineHash="-582428250" unbViolId="3a5ef74d-fb74-3335-a01c-2dade52c6fb6" risk="Undefined" locType="sr" hash="2046383933" causeLocRef="48">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-582428250" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" ln="87" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="87" srcRngEndLn="87" desc="_ssn = resultSet.getString(2)" ElType="CP" rngLn="87">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CWE.200.SIO" lnHash="875386708" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2d5856cd-851f-3cb1-aa88-4bf633796482" locEndPos="93" urgent="true" prio="Not Defined" locEndLn="91" goals="1," locStartln="91" sev="3" locRef="48" tool="jtest" lineHash="875386708" unbViolId="2eef7ef1-606c-392b-bbde-788c23946f15" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CWE.200.PEO" lnHash="875386708" pkg="examples.nbank" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="00f73a13-fd96-35bd-9a54-47aee5c177c9" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="91" goals="1," locStartln="91" sev="1" locRef="48" tool="jtest" lineHash="875386708" unbViolId="4112e7c6-9f49-36c9-b109-1724c5b7692a" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Security manager is missing, 'setSecurityManager' should be invoked" ln="97" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CWE.287.SSM" lnHash="-1228458120" pkg="examples.nbank" rule.header="Ensure that an appropriate security manager is set" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="58a968a6-6db0-3da9-948b-6b2fded8ca87" locEndPos="27" urgent="true" prio="Not Defined" locEndLn="97" goals="1," locStartln="97" sev="1" locRef="48" tool="jtest" lineHash="-1228458120" unbViolId="710afeac-3c39-362f-ab10-dd568e923aae" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Security manager is missing, 'setSecurityManager' should be invoked" ln="97" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CWE.306.SSM" lnHash="-1228458120" pkg="examples.nbank" rule.header="Ensure that an appropriate security manager is set" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="60cfb726-7ca8-3a9e-97fc-b169af889a9f" locEndPos="27" urgent="true" prio="Not Defined" locEndLn="97" goals="1," locStartln="97" sev="1" locRef="48" tool="jtest" lineHash="-1228458120" unbViolId="edda99aa-cbac-3876-b105-d9b6fe8d20f7" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="44" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="CWE.200.SIO" lnHash="-1238508370" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d3ab04de-2109-3882-99b9-b245d74ee994" locEndPos="50" urgent="true" prio="Not Defined" locEndLn="44" goals="1," locStartln="44" sev="3" locRef="52" tool="jtest" lineHash="-1238508370" unbViolId="a0981fd6-a877-3026-8543-8e34dcfc532b" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="44" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="CWE.200.PEO" lnHash="-1238508370" pkg="examples.nbank" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b08b3fc8-8b4f-3990-8327-862ff21fdcd2" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="44" goals="1," locStartln="44" sev="1" locRef="52" tool="jtest" lineHash="-1238508370" unbViolId="478dca7c-0304-32cd-9d91-69a47fcf9a4e" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="Consider using a &quot;Context&quot; Object instead of calling 'getParameter()'" ln="65" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="lavanya" rule="CWE.20.UCO" lnHash="-103292812" pkg="examples.security" rule.header="Use a Context Object to manage HTTP request parameters" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7ff672c6-27b6-3ee3-a7db-0a851f19e241" locEndPos="46" prio="Not Defined" locEndLn="65" goals="0," locStartln="65" sev="2" locRef="55" tool="jtest" lineHash="-103292812" unbViolId="0abf544e-e5fa-39a5-9263-8c0e27aa9a5f" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Consider using a &quot;Context&quot; Object instead of calling 'getParameter()'" ln="66" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="lavanya" rule="CWE.20.UCO" lnHash="1142493140" pkg="examples.security" rule.header="Use a Context Object to manage HTTP request parameters" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9f8e98e7-6807-3dec-bbc9-93730c9d2c5a" locEndPos="46" prio="Not Defined" locEndLn="66" goals="0," locStartln="66" sev="2" locRef="55" tool="jtest" lineHash="1142493140" unbViolId="65b7cc10-ad47-39ce-967a-7fbbea4b4a5b" risk="Undefined" locType="sr" hash="-1145404863" />
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="70" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="59" auth="lavanya" FirstElSrcRngEndLn="66" rule="CWE.352.VPPD" FirstElSrcRngStartPos="8" lnHash="1722882907" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.security" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="66" locStartPos="13" analyzer="com.parasoft.jtest.flowanalyzer" id="1384686368" lang="java" violId="fc50027d-eab8-3dfa-ba61-3ac304845afe" locEndPos="42" urgent="true" prio="Not Defined" locEndLn="70" goals="1," locStartln="70" sev="2" locRef="55" tool="jtest" lineHash="1722882907" unbViolId="d963dede-a77c-3861-97ff-a858a97da51e" risk="Undefined" locType="sr" hash="-1145404863" causeLocRef="55">
      <Props />
      <ElDescList>
        <ElDesc lineHash="2012167559" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="63" srcRngStartPos="8" srcRngEndPos="73" srcRngStartln="63" srcRngEndLn="63" desc="PrintStream output = new PrintStream(response.getOutputStream());" ElType="." rngLn="63" />
        <ElDesc lineHash="-103292812" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="65" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="65" srcRngEndLn="65" desc="String username = request.getParameter(&quot;username&quot;);" ElType="." rngLn="65" />
        <ElDesc lineHash="1142493140" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="66" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="66" srcRngEndLn="66" desc="String password = request.getParameter(&quot;password&quot;);" ElType=".C" rngLn="66">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1722882907" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="70" srcRngStartPos="13" srcRngEndPos="42" srcRngStartln="70" srcRngEndLn="70" desc="authorize(username, password)" ElType=".P" rngLn="70">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="70" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="59" auth="lavanya" FirstElSrcRngEndLn="66" rule="CWE.79.VPPD" FirstElSrcRngStartPos="8" lnHash="1722882907" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.security" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="66" locStartPos="13" analyzer="com.parasoft.jtest.flowanalyzer" id="461148788" lang="java" violId="b93658a8-34ec-3791-ace6-8005743a95f3" locEndPos="42" urgent="true" prio="Not Defined" locEndLn="70" goals="1," locStartln="70" sev="2" locRef="55" tool="jtest" lineHash="1722882907" unbViolId="cd1934c9-3c23-3133-b751-f34a8294db7e" risk="Undefined" locType="sr" hash="-1145404863" causeLocRef="55">
      <Props />
      <ElDescList>
        <ElDesc lineHash="2012167559" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="63" srcRngStartPos="8" srcRngEndPos="73" srcRngStartln="63" srcRngEndLn="63" desc="PrintStream output = new PrintStream(response.getOutputStream());" ElType="." rngLn="63" />
        <ElDesc lineHash="-103292812" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="65" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="65" srcRngEndLn="65" desc="String username = request.getParameter(&quot;username&quot;);" ElType="." rngLn="65" />
        <ElDesc lineHash="1142493140" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="66" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="66" srcRngEndLn="66" desc="String password = request.getParameter(&quot;password&quot;);" ElType=".C" rngLn="66">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1722882907" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="70" srcRngStartPos="13" srcRngEndPos="42" srcRngStartln="70" srcRngEndLn="70" desc="authorize(username, password)" ElType=".P" rngLn="70">
          <Anns>
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="'&lt;h1>Welcome ' is processed using raw text instead of a library" ln="76" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="lavanya" rule="CWE.79.ARXML" lnHash="-1540757125" pkg="examples.security" rule.header="Process XML and HTML with a library instead of raw text" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dedbcd6d-cab6-38d9-a12d-08b0efb9819a" locEndPos="37" prio="Not Defined" locEndLn="76" goals="0," locStartln="76" sev="1" locRef="55" tool="jtest" lineHash="-1540757125" unbViolId="db0b4367-7867-3a2e-9f68-9d2396e59bd0" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities" ln="90" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="lavanya" rule="CWE.89.UPS" lnHash="-1686616749" pkg="examples.security" rule.header="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" locStartPos="31" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f460acd8-72b8-3c06-b0aa-83d985e15936" locEndPos="46" prio="Not Defined" locEndLn="90" goals="0," locStartln="90" sev="1" locRef="55" tool="jtest" lineHash="-1686616749" unbViolId="85c612cf-cf96-3556-b83f-f761a2fe674f" risk="Undefined" locType="sr" hash="-1145404863" />
    <FlowViol msg="Data obtained from a servlet request (&quot;query&quot;) is injected to an SQL query" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="59" auth="lavanya" FirstElSrcRngEndLn="65" rule="CWE.89.TDSQL" FirstElSrcRngStartPos="8" lnHash="849041673" ruleSCSCMsg="Tainting point" pkg="examples.security" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" rule.header="Protect against SQL injection" FirstElSrcRngStartln="65" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-791789228" lang="java" violId="40a7e880-3620-3be2-8e3c-b85297ea2c2c" locEndPos="41" urgent="true" prio="Not Defined" locEndLn="91" goals="1," locStartln="91" sev="1" locRef="55" tool="jtest" lineHash="849041673" unbViolId="fb4309ab-5c5b-3d47-8337-60be31340d7a" risk="Undefined" locType="sr" hash="-1145404863" causeLocRef="55">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="2012167559" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="63" srcRngStartPos="8" srcRngEndPos="73" srcRngStartln="63" srcRngEndLn="63" desc="PrintStream output = new PrintStream(response.getOutputStream());" ElType="." rngLn="63" />
        <ElDesc lineHash="-103292812" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="65" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="65" srcRngEndLn="65" desc="String username = request.getParameter(&quot;username&quot;);" ElType=".C" rngLn="65">
          <Props>
            <Prop key="Tracked variables" val="username" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: username" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1142493140" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="66" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="66" srcRngEndLn="66" desc="String password = request.getParameter(&quot;password&quot;);" ElType="." rngLn="66" />
        <ElDesc lineHash="1722882907" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="70" srcRngStartPos="13" srcRngEndPos="42" srcRngStartln="70" srcRngEndLn="70" desc="authorize(username, password)" ElType="!" rngLn="70">
          <ElDescList>
            <ElDesc lineHash="-271783734" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="83" srcRngStartPos="8" srcRngEndPos="30" srcRngStartln="83" srcRngEndLn="83" desc="Statement stmt = null;" ElType="." rngLn="83">
              <Props>
                <Prop key="Tracked variables" val="username" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: username" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="920994605" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="84" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="84" srcRngEndLn="84" desc="ResultSet rs = null;" ElType="." rngLn="84" />
            <ElDesc lineHash="-168135453" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="89" srcRngStartPos="12" srcRngEndPos="115" srcRngStartln="89" srcRngEndLn="89" desc="String query = &quot;SELECT * FROM users WHERE username='&quot; + username + &quot;' AND password='&quot; + password + &quot;'&quot;;" ElType="!" rngLn="89" />
            <ElDesc lineHash="-1686616749" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="90" srcRngStartPos="12" srcRngEndPos="48" srcRngStartln="90" srcRngEndLn="90" desc="stmt = _connection.createStatement()" ElType="." rngLn="90">
              <Props>
                <Prop key="Tracked variables" val="query" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: query" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="849041673" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="91" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="91" srcRngEndLn="91" desc="rs = stmt.executeQuery(query)" ElType=".P" rngLn="91">
              <Props>
                <Prop key="Tracked variables" val="query" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: query" kind="var" />
                <Ann msg="Call to a dangerous method" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a servlet request (&quot;query&quot;) is injected to an SQL query" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="59" auth="lavanya" FirstElSrcRngEndLn="66" rule="CWE.89.TDSQL" FirstElSrcRngStartPos="8" lnHash="849041673" ruleSCSCMsg="Tainting point" pkg="examples.security" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" rule.header="Protect against SQL injection" FirstElSrcRngStartln="66" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-2001756241" lang="java" violId="9ceb13dd-24db-311f-8183-602c5bc0be57" locEndPos="41" urgent="true" prio="Not Defined" locEndLn="91" goals="1," locStartln="91" sev="1" locRef="55" tool="jtest" lineHash="849041673" unbViolId="ada80ee2-92a4-3291-aeee-82c97ffad0b8" risk="Undefined" locType="sr" hash="-1145404863" causeLocRef="55">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="2012167559" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="63" srcRngStartPos="8" srcRngEndPos="73" srcRngStartln="63" srcRngEndLn="63" desc="PrintStream output = new PrintStream(response.getOutputStream());" ElType="." rngLn="63" />
        <ElDesc lineHash="-103292812" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="65" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="65" srcRngEndLn="65" desc="String username = request.getParameter(&quot;username&quot;);" ElType="." rngLn="65" />
        <ElDesc lineHash="1142493140" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="66" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="66" srcRngEndLn="66" desc="String password = request.getParameter(&quot;password&quot;);" ElType=".C" rngLn="66">
          <Props>
            <Prop key="Tracked variables" val="password" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: password" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1722882907" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="70" srcRngStartPos="13" srcRngEndPos="42" srcRngStartln="70" srcRngEndLn="70" desc="authorize(username, password)" ElType="!" rngLn="70">
          <ElDescList>
            <ElDesc lineHash="-271783734" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="83" srcRngStartPos="8" srcRngEndPos="30" srcRngStartln="83" srcRngEndLn="83" desc="Statement stmt = null;" ElType="." rngLn="83">
              <Props>
                <Prop key="Tracked variables" val="password" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: password" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="920994605" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="84" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="84" srcRngEndLn="84" desc="ResultSet rs = null;" ElType="." rngLn="84" />
            <ElDesc lineHash="-168135453" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="89" srcRngStartPos="12" srcRngEndPos="115" srcRngStartln="89" srcRngEndLn="89" desc="String query = &quot;SELECT * FROM users WHERE username='&quot; + username + &quot;' AND password='&quot; + password + &quot;'&quot;;" ElType="!" rngLn="89" />
            <ElDesc lineHash="-1686616749" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="90" srcRngStartPos="12" srcRngEndPos="48" srcRngStartln="90" srcRngEndLn="90" desc="stmt = _connection.createStatement()" ElType="." rngLn="90">
              <Props>
                <Prop key="Tracked variables" val="query" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: query" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="849041673" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="91" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="91" srcRngEndLn="91" desc="rs = stmt.executeQuery(query)" ElType=".P" rngLn="91">
              <Props>
                <Prop key="Tracked variables" val="query" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: query" kind="var" />
                <Ann msg="Call to a dangerous method" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities" ln="120" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="lavanya" rule="CWE.89.UPS" lnHash="-2050969790" pkg="examples.security" rule.header="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" locStartPos="41" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f7b44ea0-726a-31f0-93e7-aad49a69f1ff" locEndPos="56" prio="Not Defined" locEndLn="120" goals="0," locStartln="120" sev="1" locRef="55" tool="jtest" lineHash="-2050969790" unbViolId="5796afaf-05bf-36af-b8f7-cddac944c535" risk="Undefined" locType="sr" hash="-1145404863" />
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="55" auth="lavanya" FirstElSrcRngEndLn="20" rule="CWE.352.VPPD" FirstElSrcRngStartPos="12" lnHash="-117295469" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.servlets" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="20" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-2018410882" lang="java" violId="a19912ea-000b-3435-9dea-120fd6e66146" locEndPos="55" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="2" locRef="56" tool="jtest" lineHash="-117295469" unbViolId="9618b559-90a9-3717-a68f-396e74ab82ef" risk="Undefined" locType="sr" hash="-1999350871" causeLocRef="56">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-117295469" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ln="20" srcRngStartPos="12" srcRngEndPos="55" srcRngStartln="20" srcRngEndLn="20" desc="request.getParameter(&quot;name&quot;).equals(&quot;John&quot;)" ElType="CP" rngLn="20">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getParameter()&quot; method returns tainted data that should be validated before use" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="55" auth="lavanya" FirstElSrcRngEndLn="20" rule="CWE.79.VPPD" FirstElSrcRngStartPos="12" lnHash="-117295469" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.servlets" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="20" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-834318550" lang="java" violId="85a09d49-8cdb-382c-8253-b6b2bdd37350" locEndPos="55" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="2" locRef="56" tool="jtest" lineHash="-117295469" unbViolId="cb4fbf7a-cdcc-3170-a849-59eed475afd7" risk="Undefined" locType="sr" hash="-1999350871" causeLocRef="56">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-117295469" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ln="20" srcRngStartPos="12" srcRngEndPos="55" srcRngStartln="20" srcRngEndLn="20" desc="request.getParameter(&quot;name&quot;).equals(&quot;John&quot;)" ElType="CP" rngLn="20">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Consider using a &quot;Context&quot; Object instead of calling 'getParameter()'" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="lavanya" rule="CWE.20.UCO" lnHash="-117295469" pkg="examples.servlets" rule.header="Use a Context Object to manage HTTP request parameters" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="40b44863-b9e4-3a41-a41b-69f4e02073dc" locEndPos="32" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="2" locRef="56" tool="jtest" lineHash="-117295469" unbViolId="eebae025-618f-3c12-8fa9-f8709457718c" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1005479687" pkg="examples.servlets" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2210a049-cdd7-39c0-b164-70af43d1418b" locEndPos="34" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="56" tool="jtest" lineHash="1005479687" unbViolId="bc77a93a-100a-366b-8189-c80c64102c44" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="39" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="lavanya" rule="CWE.200.SIO" lnHash="427568246" pkg="examples.servlets" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2b764785-41ab-3662-bca0-aa44725e68a9" locEndPos="44" prio="Not Defined" locEndLn="39" goals="0," locStartln="39" sev="3" locRef="56" tool="jtest" lineHash="427568246" unbViolId="3f8422ba-1fb0-3905-9672-b077dabfdcee" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1300419954" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8aaac313-d174-3641-9520-b058cabab092" locEndPos="56" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="58" tool="jtest" lineHash="1300419954" unbViolId="d68d0879-9482-3033-b842-a863e22c876b" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="883210702" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="314708dd-3b53-37dd-b3b5-d04ea367255c" locEndPos="37" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="58" tool="jtest" lineHash="883210702" unbViolId="d3cf06fa-d226-3116-a149-4a7d26e13bf9" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1594507265" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5caab937-807d-3b58-892c-ac4cb25cc3f5" locEndPos="42" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="58" tool="jtest" lineHash="1594507265" unbViolId="51991af6-33b1-3aaf-ad2c-f309647bb9f6" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="21" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="965634877" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d32b7ad8-efc3-392a-be06-3b5bf8b62a42" locEndPos="42" prio="Not Defined" locEndLn="21" goals="0," locStartln="21" sev="3" locRef="58" tool="jtest" lineHash="965634877" unbViolId="5061474b-6f33-3afa-9f7c-abef83aff5c7" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1178584314" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="20fd0f6a-affb-36cb-8171-8dd708c34fbe" locEndPos="40" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="3" locRef="58" tool="jtest" lineHash="1178584314" unbViolId="4e4333a0-1e0b-3095-bd86-2bf255a8315c" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1321380252" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="af9ceb76-b0d4-3e09-bf12-4ad86da28ee6" locEndPos="37" prio="Not Defined" locEndLn="23" goals="0," locStartln="23" sev="3" locRef="58" tool="jtest" lineHash="1321380252" unbViolId="ff98f222-ba2b-3413-b747-0d93693db202" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="570670995" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="457e9297-d8ff-39bf-a5b3-951f462f7249" locEndPos="38" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="58" tool="jtest" lineHash="570670995" unbViolId="0da76118-945a-3c3a-b0ea-890447f69073" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1084251376" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8afd0a38-53a3-3295-9089-84e1a0a57139" locEndPos="48" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="58" tool="jtest" lineHash="1084251376" unbViolId="c7142d28-b10c-387b-8cad-b06448c6407e" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.print' is not a leftover debug statement" ln="43" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="585159166" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c47f559b-78cd-3d7a-b338-d234cd862769" locEndPos="31" prio="Not Defined" locEndLn="43" goals="0," locStartln="43" sev="3" locRef="58" tool="jtest" lineHash="585159166" unbViolId="fe520f21-3d86-3e6d-a81e-de441410a39a" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="82" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-67372973" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6a5e3e41-8df2-32c8-bb6e-fa1ac3fc66db" locEndPos="72" prio="Not Defined" locEndLn="82" goals="0," locStartln="82" sev="3" locRef="58" tool="jtest" lineHash="-67372973" unbViolId="c5a42a4a-a087-354f-9cd4-e5d0f912d3c2" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Security manager is missing, 'setSecurityManager' should be invoked" ln="94" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.287.SSM" lnHash="-1228458120" pkg="examples.stackmachine" rule.header="Ensure that an appropriate security manager is set" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="84dffa6b-73b6-3fe6-bf29-d9819a67a316" locEndPos="27" prio="Not Defined" locEndLn="94" goals="0," locStartln="94" sev="1" locRef="58" tool="jtest" lineHash="-1228458120" unbViolId="a737d852-0422-3aa0-97b2-3cb6f1abdd91" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Security manager is missing, 'setSecurityManager' should be invoked" ln="94" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.306.SSM" lnHash="-1228458120" pkg="examples.stackmachine" rule.header="Ensure that an appropriate security manager is set" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c3f117cd-8899-3ae5-90ce-a60e3ef4f63e" locEndPos="27" prio="Not Defined" locEndLn="94" goals="0," locStartln="94" sev="1" locRef="58" tool="jtest" lineHash="-1228458120" unbViolId="cf872159-3cec-35d6-ae97-f2f8832e3e2c" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="113" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1278069743" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="79dd1809-a692-3cfb-ad1b-ad8fab876c56" locEndPos="59" prio="Not Defined" locEndLn="113" goals="0," locStartln="113" sev="3" locRef="58" tool="jtest" lineHash="1278069743" unbViolId="093d5c0d-ae36-3757-bec0-c5c228bb509e" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="119" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-1987515317" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c77bd0e8-b7f6-3e79-9a51-1d1b76615392" locEndPos="70" prio="Not Defined" locEndLn="119" goals="0," locStartln="119" sev="3" locRef="58" tool="jtest" lineHash="-1987515317" unbViolId="cbff732f-c4ff-38ec-b45f-d61f6228441c" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="124" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-2144858711" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b91587b7-6fa5-3035-96cb-2a77ca93db13" locEndPos="78" prio="Not Defined" locEndLn="124" goals="0," locStartln="124" sev="3" locRef="58" tool="jtest" lineHash="-2144858711" unbViolId="809d1461-ce33-3818-b193-84ce222d4d26" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="128" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="869819890" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="95a51a2d-493b-3d28-bd53-3cbd271fa127" locEndPos="63" prio="Not Defined" locEndLn="128" goals="0," locStartln="128" sev="3" locRef="58" tool="jtest" lineHash="869819890" unbViolId="d9772f82-9a46-30ce-8df4-66d0c6ee4b47" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="130" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-208574787" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5e8ea17c-77ec-32d8-aca0-6cc2c0acd662" locEndPos="42" prio="Not Defined" locEndLn="130" goals="0," locStartln="130" sev="3" locRef="58" tool="jtest" lineHash="-208574787" unbViolId="f245b495-d453-37ee-a077-8b5c294aff73" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="132" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1645795027" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ec8dec57-08ad-3db7-99c3-2499f24684ae" locEndPos="58" prio="Not Defined" locEndLn="132" goals="0," locStartln="132" sev="3" locRef="58" tool="jtest" lineHash="1645795027" unbViolId="a11d16dd-1088-3ce4-a10e-af8649472c6f" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="137" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-1068539286" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d897b124-4c00-3ce5-90e1-c4f56f5082b4" locEndPos="30" prio="Not Defined" locEndLn="137" goals="0," locStartln="137" sev="3" locRef="58" tool="jtest" lineHash="-1068539286" unbViolId="fd412d67-e4ef-39aa-b3f1-951fcf0a46e5" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="138" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1300419954" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f58cc783-fcf8-34c9-9ad2-aa739f93e215" locEndPos="56" prio="Not Defined" locEndLn="138" goals="0," locStartln="138" sev="3" locRef="58" tool="jtest" lineHash="1300419954" unbViolId="34293113-0550-3262-8e1b-3baa60309ae4" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="139" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-1068539286" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="49c8b201-ca0b-3ae1-b83d-d122399d25f7" locEndPos="30" prio="Not Defined" locEndLn="139" goals="0," locStartln="139" sev="3" locRef="58" tool="jtest" lineHash="-1068539286" unbViolId="3378274e-2366-3c49-bf80-245946dcf3b2" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="140" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="509958792" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="58c84528-bae0-3a86-bfef-b823a23a3a63" locEndPos="69" prio="Not Defined" locEndLn="140" goals="0," locStartln="140" sev="3" locRef="58" tool="jtest" lineHash="509958792" unbViolId="94ab8ea0-f8f6-3d90-9fac-c4ff171ac88e" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="141" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-1068539286" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="db456a6d-77f1-3d4c-b92f-0d685ad4f29c" locEndPos="30" prio="Not Defined" locEndLn="141" goals="0," locStartln="141" sev="3" locRef="58" tool="jtest" lineHash="-1068539286" unbViolId="050573bb-9bdb-32d4-a4ff-d316bb8601c9" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="142" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-1434727757" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c9a396d6-2fff-38b8-ae63-1e34b43b1ee8" locEndPos="85" prio="Not Defined" locEndLn="142" goals="0," locStartln="142" sev="3" locRef="58" tool="jtest" lineHash="-1434727757" unbViolId="00e3291f-4180-3942-900d-e1c1e70a3f08" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="143" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="-872152814" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b078c44e-5d5c-39d5-8239-c36e0a51be4f" locEndPos="134" prio="Not Defined" locEndLn="143" goals="0," locStartln="143" sev="3" locRef="58" tool="jtest" lineHash="-872152814" unbViolId="0593c4f5-6745-305d-9fbb-248c9f65b7d6" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="144" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="lavanya" rule="CWE.200.SIO" lnHash="1078431004" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5220c556-220e-3846-8cb1-06ba243edba2" locEndPos="113" prio="Not Defined" locEndLn="144" goals="0," locStartln="144" sev="3" locRef="58" tool="jtest" lineHash="1078431004" unbViolId="826dff8c-7b51-3f7c-9be6-989d0b65d461" risk="Undefined" locType="sr" hash="-1581767335" />
    <FlowViol msg="The argument of the constructor for &quot;StackList&quot; is dangerous and should be validated" ln="102" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="40" auth="staff" FirstElSrcRngEndLn="102" rule="CWE.352.EACM" FirstElSrcRngStartPos="21" lnHash="-520812146" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.stackmachine" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="102" locStartPos="21" analyzer="com.parasoft.jtest.flowanalyzer" id="-110675605" lang="java" violId="c44cff13-a47a-3f8c-a3b5-56ac5fc15626" locEndPos="40" urgent="true" prio="Not Defined" locEndLn="102" goals="1," locStartln="102" sev="2" locRef="62" tool="jtest" lineHash="-520812146" unbViolId="4cddf903-27b8-3f04-be5d-79fe3663cf63" risk="Undefined" locType="sr" hash="-339219917" causeLocRef="62">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-520812146" locType="sr" srcRnghash="-339219917" locRef="62" srcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ln="102" srcRngStartPos="21" srcRngEndPos="40" srcRngStartln="102" srcRngEndLn="102" desc="new StackList(this)" ElType="CP" rngLn="102">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;StackList&quot; is dangerous and should be validated" ln="102" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="40" auth="staff" FirstElSrcRngEndLn="102" rule="CWE.79.EACM" FirstElSrcRngStartPos="21" lnHash="-520812146" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.stackmachine" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="102" locStartPos="21" analyzer="com.parasoft.jtest.flowanalyzer" id="-1330443841" lang="java" violId="46ac6466-a011-39ef-afc0-c7d6b4203b86" locEndPos="40" urgent="true" prio="Not Defined" locEndLn="102" goals="1," locStartln="102" sev="2" locRef="62" tool="jtest" lineHash="-520812146" unbViolId="bc0b008c-408e-3dcb-8f7e-dec7a570554c" risk="Undefined" locType="sr" hash="-339219917" causeLocRef="62">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-520812146" locType="sr" srcRnghash="-339219917" locRef="62" srcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ln="102" srcRngStartPos="21" srcRngEndPos="40" srcRngStartln="102" srcRngEndLn="102" desc="new StackList(this)" ElType="CP" rngLn="102">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getText()&quot; method returns tainted data that should be validated before use" ln="261" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="39" auth="staff" FirstElSrcRngEndLn="261" rule="CWE.352.VPPD" FirstElSrcRngStartPos="12" lnHash="688944719" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.stackmachine" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="261" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1023243178" lang="java" violId="44474af9-465f-33b6-92ec-08cb7983b7d9" locEndPos="39" urgent="true" prio="Not Defined" locEndLn="261" goals="1," locStartln="261" sev="2" locRef="62" tool="jtest" lineHash="688944719" unbViolId="b8fc276d-b022-3765-80eb-83a204cdb1fa" risk="Undefined" locType="sr" hash="-339219917" causeLocRef="62">
      <Props />
      <ElDescList>
        <ElDesc lineHash="688944719" locType="sr" srcRnghash="-339219917" locRef="62" srcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ln="261" srcRngStartPos="12" srcRngEndPos="39" srcRngStartln="261" srcRngEndLn="261" desc="_stackList.push(getText());" ElType="CP" rngLn="261">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getText()&quot; method returns tainted data that should be validated before use" ln="261" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="39" auth="staff" FirstElSrcRngEndLn="261" rule="CWE.79.VPPD" FirstElSrcRngStartPos="12" lnHash="688944719" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.stackmachine" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="261" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1963541246" lang="java" violId="a21dfa52-82dc-36df-84a2-98d01526502f" locEndPos="39" urgent="true" prio="Not Defined" locEndLn="261" goals="1," locStartln="261" sev="2" locRef="62" tool="jtest" lineHash="688944719" unbViolId="6bb8a630-e77a-32b4-95f7-14b734d58474" risk="Undefined" locType="sr" hash="-339219917" causeLocRef="62">
      <Props />
      <ElDescList>
        <ElDesc lineHash="688944719" locType="sr" srcRnghash="-339219917" locRef="62" srcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ln="261" srcRngStartPos="12" srcRngEndPos="39" srcRngStartln="261" srcRngEndLn="261" desc="_stackList.push(getText());" ElType="CP" rngLn="261">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getText()&quot; method returns tainted data that should be validated before use" ln="305" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="54" auth="staff" FirstElSrcRngEndLn="305" rule="CWE.352.VPPD" FirstElSrcRngStartPos="12" lnHash="1370893731" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.stackmachine" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="305" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1023243178" lang="java" violId="594e2f63-2300-30ac-894d-3f6741dd1520" locEndPos="54" urgent="true" prio="Not Defined" locEndLn="305" goals="1," locStartln="305" sev="2" locRef="62" tool="jtest" lineHash="1370893731" unbViolId="89a6b9c6-f015-37c2-b9f3-d460e69f720f" risk="Undefined" locType="sr" hash="-339219917" causeLocRef="62">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1370893731" locType="sr" srcRnghash="-339219917" locRef="62" srcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ln="305" srcRngStartPos="12" srcRngEndPos="54" srcRngStartln="305" srcRngEndLn="305" desc="_stackList.push(_pushTextField.getText());" ElType="CP" rngLn="305">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The &quot;getText()&quot; method returns tainted data that should be validated before use" ln="305" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ruleSAFMsg="Point where tainted data is used" FirstElSrcRngEndPos="54" auth="staff" FirstElSrcRngEndLn="305" rule="CWE.79.VPPD" FirstElSrcRngStartPos="12" lnHash="1370893731" ruleSCSCMsg="Point where tainted data is accessed" pkg="examples.stackmachine" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" rule.header="Validate all dangerous data" FirstElSrcRngStartln="305" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1963541246" lang="java" violId="39dc7700-7043-3cee-acb2-de8cff400e3b" locEndPos="54" urgent="true" prio="Not Defined" locEndLn="305" goals="1," locStartln="305" sev="2" locRef="62" tool="jtest" lineHash="1370893731" unbViolId="7cd25214-60a4-3c50-8585-3c6579f01863" risk="Undefined" locType="sr" hash="-339219917" causeLocRef="62">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1370893731" locType="sr" srcRnghash="-339219917" locRef="62" srcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ln="305" srcRngStartPos="12" srcRngEndPos="54" srcRngStartln="305" srcRngEndLn="305" desc="_stackList.push(_pushTextField.getText());" ElType="CP" rngLn="305">
          <Anns>
            <Ann msg="Point where tainted data is accessed" kind="cause" />
            <Ann msg="Point where tainted data is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Data obtained from a Java reflection method (&quot;new ImageIcon(RunnableStackMachine.class.getResource(button_image))&quot;) is leaking via Swing component" ln="372" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ruleSAFMsg="Leakage point" FirstElSrcRngEndPos="84" auth="staff" FirstElSrcRngEndLn="372" rule="CWE.200.SENS" FirstElSrcRngStartPos="32" lnHash="1682226347" ruleSCSCMsg="Source of sensitive data" pkg="examples.stackmachine" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" rule.header="Prevent exposure of sensitive data" FirstElSrcRngStartln="372" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-124473547" lang="java" violId="3a61c237-2f03-30d8-aa5c-e5b3072ced4c" locEndPos="87" urgent="true" prio="Not Defined" locEndLn="372" goals="1," locStartln="372" sev="1" locRef="62" tool="jtest" lineHash="1682226347" unbViolId="40afdf0d-62ce-31da-b919-f60cb1590f90" risk="Undefined" locType="sr" hash="-339219917" causeLocRef="62">
      <Props>
        <Prop key="Tracked variables" val="Sensitive data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1682226347" locType="sr" srcRnghash="-339219917" locRef="62" srcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ln="372" srcRngStartPos="12" srcRngEndPos="87" srcRngStartln="372" srcRngEndLn="372" desc="super(new ImageIcon(RunnableStackMachine.class.getResource(button_image)));" ElType="CP" rngLn="372">
          <Props>
            <Prop key="Tracked variables" val="new ImageIcon(RunnableStackMachine.class.getResource(button_image))" />
          </Props>
          <Anns>
            <Ann msg="Source of sensitive data" kind="cause" />
            <Ann msg="Sensitive data: new ImageIcon(RunnableStackMachine.class.getResource(button_image))" kind="var" />
            <Ann msg="Leakage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;JButton&quot; is dangerous and should be validated" ln="372" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="87" auth="staff" FirstElSrcRngEndLn="372" rule="CWE.352.EACM" FirstElSrcRngStartPos="12" lnHash="1682226347" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.stackmachine" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="372" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1142352605" lang="java" violId="09240df1-5f4a-3c6f-827c-c68fe63ff00c" locEndPos="87" urgent="true" prio="Not Defined" locEndLn="372" goals="1," locStartln="372" sev="2" locRef="62" tool="jtest" lineHash="1682226347" unbViolId="feaf771f-4bdb-3923-b834-89489d05cc4c" risk="Undefined" locType="sr" hash="-339219917" causeLocRef="62">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1682226347" locType="sr" srcRnghash="-339219917" locRef="62" srcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ln="372" srcRngStartPos="12" srcRngEndPos="87" srcRngStartln="372" srcRngEndLn="372" desc="super(new ImageIcon(RunnableStackMachine.class.getResource(button_image)));" ElType="CP" rngLn="372">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The argument of the constructor for &quot;JButton&quot; is dangerous and should be validated" ln="372" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ruleSAFMsg="Place where an unvalidated argument is passed to the method" FirstElSrcRngEndPos="87" auth="staff" FirstElSrcRngEndLn="372" rule="CWE.79.EACM" FirstElSrcRngStartPos="12" lnHash="1682226347" ruleSCSCMsg="Place where an unvalidated argument is passed to the method" pkg="examples.stackmachine" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" rule.header="Encapsulate arguments of dangerous methods with a validation method" FirstElSrcRngStartln="372" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-230873609" lang="java" violId="2c5bc7fb-e69d-35d7-b97a-93c253051dd8" locEndPos="87" urgent="true" prio="Not Defined" locEndLn="372" goals="1," locStartln="372" sev="2" locRef="62" tool="jtest" lineHash="1682226347" unbViolId="2275b098-cedf-38fd-8550-2a60d83e5468" risk="Undefined" locType="sr" hash="-339219917" causeLocRef="62">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1682226347" locType="sr" srcRnghash="-339219917" locRef="62" srcRngFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" ln="372" srcRngStartPos="12" srcRngEndPos="87" srcRngStartln="372" srcRngEndLn="372" desc="super(new ImageIcon(RunnableStackMachine.class.getResource(button_image)));" ElType="CP" rngLn="372">
          <Anns>
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="cause" />
            <Ann msg="Place where an unvalidated argument is passed to the method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Security manager is missing, 'setSecurityManager' should be invoked" ln="391" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="CWE.287.SSM" lnHash="-1228458120" pkg="examples.stackmachine" rule.header="Ensure that an appropriate security manager is set" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c80ca81b-ef1c-3067-b563-f800170f4900" locEndPos="27" urgent="true" prio="Not Defined" locEndLn="391" goals="1," locStartln="391" sev="1" locRef="62" tool="jtest" lineHash="-1228458120" unbViolId="1111ee7a-a245-347c-a3ba-d0817888c36c" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Security manager is missing, 'setSecurityManager' should be invoked" ln="391" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="CWE.306.SSM" lnHash="-1228458120" pkg="examples.stackmachine" rule.header="Ensure that an appropriate security manager is set" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3f47f69b-b5e1-3d84-9815-d24fcf56eea9" locEndPos="27" urgent="true" prio="Not Defined" locEndLn="391" goals="1," locStartln="391" sev="1" locRef="62" tool="jtest" lineHash="-1228458120" unbViolId="75109de3-c200-3dab-b0d7-01a48a8fee86" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Security manager is missing, 'setSecurityManager' should be invoked" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/suppress/AllFileSuppress.java" auth="lavanya" rule="CWE.287.SSM" lnHash="-1228458120" pkg="examples.suppress" rule.header="Ensure that an appropriate security manager is set" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="18a75bf6-aa2a-3b11-b4c0-41c52d377ede" locEndPos="27" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="1" locRef="65" tool="jtest" lineHash="-1228458120" unbViolId="5d7813d8-bbba-3937-9d43-640eb0a3590a" risk="Undefined" locType="sr" hash="-2129128806" />
    <StdViol msg="Security manager is missing, 'setSecurityManager' should be invoked" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/suppress/AllFileSuppress.java" auth="lavanya" rule="CWE.306.SSM" lnHash="-1228458120" pkg="examples.suppress" rule.header="Ensure that an appropriate security manager is set" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a623f94c-a4ad-3051-abeb-24c2f02bbc02" locEndPos="27" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="1" locRef="65" tool="jtest" lineHash="-1228458120" unbViolId="bf6f3883-b5ec-39d4-855f-93b4f6cebdf7" risk="Undefined" locType="sr" hash="-2129128806" />
  </StdViols>
</mergePnt>